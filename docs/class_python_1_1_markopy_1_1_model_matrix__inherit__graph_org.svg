<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Python.Markopy.ModelMatrix Pages: 1 -->
<svg width="425pt" height="2089pt"
 viewBox="0.00 0.00 424.50 2089.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2085)">
<title>Python.Markopy.ModelMatrix</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Abstract representation of a matrix based model.">
<polygon fill="#bfbfbf" stroke="black" points="120,-573.5 120,-662.5 309,-662.5 309,-573.5 120,-573.5"/>
<text text-anchor="middle" x="214.5" y="-648.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrix</text>
<polyline fill="none" stroke="black" points="120,-641.5 309,-641.5 "/>
<text text-anchor="middle" x="214.5" y="-627.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="120,-620.5 309,-620.5 "/>
<text text-anchor="start" x="128" y="-606.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def FastRandomWalk</text>
<text text-anchor="start" x="128" y="-593.9" font-family="Helvetica,sans-Serif" font-size="12.00">(int count, str wordlist,</text>
<text text-anchor="start" x="128" y="-580.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minlen, int maxlen)</text>
</a>
</g>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::ModelMatrix.">
<polygon fill="none" stroke="black" points="110.5,-382.5 110.5,-536.5 318.5,-536.5 318.5,-382.5 110.5,-382.5"/>
<text text-anchor="middle" x="214.5" y="-522.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrixCLI</text>
<polyline fill="none" stroke="black" points="110.5,-515.5 318.5,-515.5 "/>
<text text-anchor="start" x="118.5" y="-501.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="118.5" y="-488.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ fileIO</text>
<polyline fill="none" stroke="black" points="110.5,-481.5 318.5,-481.5 "/>
<text text-anchor="start" x="118.5" y="-467.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="118.5" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="118.5" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="118.5" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="118.5" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="118.5" y="-402.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="118.5" y="-389.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node5 -->
<g id="edge4" class="edge">
<title>Node1&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M214.5,-563.16C214.5,-554.56 214.5,-545.53 214.5,-536.53"/>
<polygon fill="none" stroke="midnightblue" points="211,-563.41 214.5,-573.41 218,-563.41 211,-563.41"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_markov_1_1_a_p_i_1_1_model_matrix.html" target="_top" xlink:title="Class to flatten and reduce Markov::Model to a Matrix.">
<polygon fill="none" stroke="black" points="87.5,-699.5 87.5,-1204.5 341.5,-1204.5 341.5,-699.5 87.5,-699.5"/>
<text text-anchor="middle" x="214.5" y="-1190.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::ModelMatrix</text>
<polyline fill="none" stroke="black" points="87.5,-1183.5 341.5,-1183.5 "/>
<text text-anchor="start" x="95.5" y="-1169.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char ** edgeMatrix</text>
<text text-anchor="start" x="95.5" y="-1156.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int ** valueMatrix</text>
<text text-anchor="start" x="95.5" y="-1143.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int matrixSize</text>
<text text-anchor="start" x="95.5" y="-1130.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char * matrixIndex</text>
<text text-anchor="start" x="95.5" y="-1117.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int * totalEdgeWeights</text>
<text text-anchor="start" x="95.5" y="-1104.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool ready</text>
<polyline fill="none" stroke="black" points="87.5,-1097.5 341.5,-1097.5 "/>
<text text-anchor="start" x="95.5" y="-1083.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ModelMatrix()</text>
<text text-anchor="start" x="95.5" y="-1070.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool ConstructMatrix()</text>
<text text-anchor="start" x="95.5" y="-1057.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void DumpJSON()</text>
<text text-anchor="start" x="95.5" y="-1044.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ int FastRandomWalk</text>
<text text-anchor="start" x="95.5" y="-1031.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="95.5" y="-1018.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *wordlistFileName,</text>
<text text-anchor="start" x="95.5" y="-1005.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="95.5" y="-992.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool bFileIO=true)</text>
<text text-anchor="start" x="95.5" y="-979.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Import(const char</text>
<text text-anchor="start" x="95.5" y="-966.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="95.5" y="-953.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="95.5" y="-940.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="95.5" y="-927.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="95.5" y="-914.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int FastRandomWalk</text>
<text text-anchor="start" x="95.5" y="-901.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="95.5" y="-888.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::ofstream *wordlist,</text>
<text text-anchor="start" x="95.5" y="-875.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="95.5" y="-862.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool</text>
<text text-anchor="start" x="95.5" y="-849.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO=true)</text>
<text text-anchor="start" x="95.5" y="-836.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkPartition</text>
<text text-anchor="start" x="95.5" y="-823.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std::</text>
<text text-anchor="start" x="95.5" y="-810.9" font-family="Helvetica,sans-Serif" font-size="12.00">ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="95.5" y="-797.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="95.5" y="-784.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, bool bFileIO, int threads)</text>
<text text-anchor="start" x="95.5" y="-771.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkThread</text>
<text text-anchor="start" x="95.5" y="-758.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std</text>
<text text-anchor="start" x="95.5" y="-745.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="95.5" y="-732.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="95.5" y="-719.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, int id, bool bFileIO)</text>
<text text-anchor="start" x="95.5" y="-706.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool DeallocateMatrix()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M214.5,-689.23C214.5,-679.71 214.5,-670.83 214.5,-662.81"/>
<polygon fill="none" stroke="midnightblue" points="211,-689.37 214.5,-699.37 218,-689.37 211,-689.37"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_markov_1_1_a_p_i_1_1_markov_passwords.html" target="_top" xlink:title="Markov::Model with char represented nodes.">
<polygon fill="none" stroke="black" points="67,-1241.5 67,-1681.5 362,-1681.5 362,-1241.5 67,-1241.5"/>
<text text-anchor="middle" x="214.5" y="-1667.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::MarkovPasswords</text>
<polyline fill="none" stroke="black" points="67,-1660.5 362,-1660.5 "/>
<text text-anchor="start" x="75" y="-1646.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ifstream * datasetFile</text>
<text text-anchor="start" x="75" y="-1633.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * modelSavefile</text>
<text text-anchor="start" x="75" y="-1620.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * outputFile</text>
<polyline fill="none" stroke="black" points="67,-1613.5 362,-1613.5 "/>
<text text-anchor="start" x="75" y="-1599.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords()</text>
<text text-anchor="start" x="75" y="-1586.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords(const</text>
<text text-anchor="start" x="75" y="-1573.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *filename)</text>
<text text-anchor="start" x="75" y="-1560.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ifstream * OpenDataset</text>
<text text-anchor="start" x="75" y="-1547.9" font-family="Helvetica,sans-Serif" font-size="12.00">File(const char *filename)</text>
<text text-anchor="start" x="75" y="-1534.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="75" y="-1521.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="75" y="-1508.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="75" y="-1495.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ofstream * Save</text>
<text text-anchor="start" x="75" y="-1482.9" font-family="Helvetica,sans-Serif" font-size="12.00">(const char *filename)</text>
<text text-anchor="start" x="75" y="-1469.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Generate(unsigned</text>
<text text-anchor="start" x="75" y="-1456.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, const char</text>
<text text-anchor="start" x="75" y="-1443.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *wordlistFileName, int</text>
<text text-anchor="start" x="75" y="-1430.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen=6, int maxLen=12,</text>
<text text-anchor="start" x="75" y="-1417.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int threads=20)</text>
<text text-anchor="start" x="75" y="-1404.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Buff(const char</text>
<text text-anchor="start" x="75" y="-1391.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *str, double multiplier,</text>
<text text-anchor="start" x="75" y="-1378.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bDontAdjustSelfLoops</text>
<text text-anchor="start" x="75" y="-1365.9" font-family="Helvetica,sans-Serif" font-size="12.00">=true, bool bDontAdjustExtendedLoops=false)</text>
<text text-anchor="start" x="75" y="-1352.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void TrainThread(Markov</text>
<text text-anchor="start" x="75" y="-1339.9" font-family="Helvetica,sans-Serif" font-size="12.00">::API::Concurrency::ThreadShared</text>
<text text-anchor="start" x="75" y="-1326.9" font-family="Helvetica,sans-Serif" font-size="12.00">ListHandler *listhandler, char</text>
<text text-anchor="start" x="75" y="-1313.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter)</text>
<text text-anchor="start" x="75" y="-1300.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void GenerateThread</text>
<text text-anchor="start" x="75" y="-1287.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *outputLock,</text>
<text text-anchor="start" x="75" y="-1274.9" font-family="Helvetica,sans-Serif" font-size="12.00"> unsigned long int n, std</text>
<text text-anchor="start" x="75" y="-1261.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, int</text>
<text text-anchor="start" x="75" y="-1248.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M214.5,-1231.02C214.5,-1222.32 214.5,-1213.57 214.5,-1204.83"/>
<polygon fill="none" stroke="midnightblue" points="211,-1231.22 214.5,-1241.22 218,-1231.22 211,-1231.22"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="class_markov_1_1_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="108.5,-1718.5 108.5,-2080.5 320.5,-2080.5 320.5,-1718.5 108.5,-1718.5"/>
<text text-anchor="middle" x="214.5" y="-2066.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::Model&lt; char &gt;</text>
<polyline fill="none" stroke="black" points="108.5,-2059.5 320.5,-2059.5 "/>
<text text-anchor="start" x="116.5" y="-2045.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::map&lt; char, Node</text>
<text text-anchor="start" x="116.5" y="-2032.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; nodes</text>
<text text-anchor="start" x="116.5" y="-2019.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; Node&lt; char &gt; * starterNode</text>
<text text-anchor="start" x="116.5" y="-2006.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="116.5" y="-1993.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; edges</text>
<polyline fill="none" stroke="black" points="108.5,-1986.5 320.5,-1986.5 "/>
<text text-anchor="start" x="116.5" y="-1972.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Model()</text>
<text text-anchor="start" x="116.5" y="-1959.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ char * RandomWalk(Markov</text>
<text text-anchor="start" x="116.5" y="-1946.9" font-family="Helvetica,sans-Serif" font-size="12.00">::Random::RandomEngine</text>
<text text-anchor="start" x="116.5" y="-1933.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *randomEngine, int minSetting,</text>
<text text-anchor="start" x="116.5" y="-1920.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxSetting, char *buffer)</text>
<text text-anchor="start" x="116.5" y="-1907.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void AdjustEdge(const</text>
<text text-anchor="start" x="116.5" y="-1894.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *payload, long</text>
<text text-anchor="start" x="116.5" y="-1881.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int occurrence)</text>
<text text-anchor="start" x="116.5" y="-1868.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(std::ifstream *)</text>
<text text-anchor="start" x="116.5" y="-1855.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(const char</text>
<text text-anchor="start" x="116.5" y="-1842.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="116.5" y="-1829.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(std::ofstream *)</text>
<text text-anchor="start" x="116.5" y="-1816.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(const char</text>
<text text-anchor="start" x="116.5" y="-1803.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="116.5" y="-1790.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Node&lt; char &gt; * StarterNode()</text>
<text text-anchor="start" x="116.5" y="-1777.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="116.5" y="-1764.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; * Edges()</text>
<text text-anchor="start" x="116.5" y="-1751.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::map&lt; char, Node</text>
<text text-anchor="start" x="116.5" y="-1738.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; * Nodes()</text>
<text text-anchor="start" x="116.5" y="-1725.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void OptimizeEdgeOrder()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M214.5,-1708.11C214.5,-1699.38 214.5,-1690.58 214.5,-1681.79"/>
<polygon fill="none" stroke="midnightblue" points="211,-1708.33 214.5,-1718.33 218,-1708.33 211,-1708.33"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_model_matrix_c_l_i.html" target="_top" xlink:title="Python CLI wrapper for CudaModelMatrix.">
<polygon fill="none" stroke="black" points="0,-172 0,-326 213,-326 213,-172 0,-172"/>
<text text-anchor="start" x="8" y="-312.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaModel</text>
<text text-anchor="middle" x="106.5" y="-299.4" font-family="Helvetica,sans-Serif" font-size="12.00">MatrixCLI</text>
<polyline fill="none" stroke="black" points="0,-292 213,-292 "/>
<text text-anchor="start" x="8" y="-278.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="8" y="-265.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ bInfinite</text>
<polyline fill="none" stroke="black" points="0,-258 213,-258 "/>
<text text-anchor="start" x="8" y="-244.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self)</text>
<text text-anchor="start" x="8" y="-231.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="8" y="-218.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="8" y="-205.4" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="8" y="-192.4" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="8" y="-179.4" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node6 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M170.35,-373.26C162.29,-357.71 153.93,-341.57 146.02,-326.3"/>
<polygon fill="none" stroke="midnightblue" points="167.34,-375.07 175.05,-382.34 173.56,-371.85 167.34,-375.07"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="class_python_1_1_markopy_1_1_markopy_c_l_i.html" target="_top" xlink:title="Top level model selector for Markopy CLI.">
<polygon fill="none" stroke="black" points="230.5,-152.5 230.5,-345.5 416.5,-345.5 416.5,-152.5 230.5,-152.5"/>
<text text-anchor="middle" x="323.5" y="-331.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkopyCLI</text>
<polyline fill="none" stroke="black" points="230.5,-324.5 416.5,-324.5 "/>
<text text-anchor="start" x="238.5" y="-310.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="238.5" y="-297.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="230.5,-290.5 416.5,-290.5 "/>
<text text-anchor="start" x="238.5" y="-276.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="238.5" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00"> add_help=False)</text>
<text text-anchor="start" x="238.5" y="-250.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="238.5" y="-237.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="238.5" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="238.5" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="238.5" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="238.5" y="-185.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
<text text-anchor="start" x="238.5" y="-172.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="238.5" y="-159.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def stub(self)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node8 -->
<g id="edge7" class="edge">
<title>Node5&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M259.01,-373.35C263.75,-364.29 268.59,-355.03 273.39,-345.85"/>
<polygon fill="none" stroke="midnightblue" points="255.85,-371.86 254.31,-382.34 262.05,-375.1 255.85,-371.86"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_markopy_c_l_i.html" target="_top" xlink:title="CUDA extension to MarkopyCLI.">
<polygon fill="none" stroke="black" points="90.5,-0.5 90.5,-115.5 338.5,-115.5 338.5,-0.5 90.5,-0.5"/>
<text text-anchor="middle" x="214.5" y="-101.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaMarkopyCLI</text>
<polyline fill="none" stroke="black" points="90.5,-94.5 338.5,-94.5 "/>
<text text-anchor="start" x="98.5" y="-80.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="98.5" y="-67.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="90.5,-60.5 338.5,-60.5 "/>
<text text-anchor="start" x="98.5" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ None __init__(self)</text>
<text text-anchor="start" x="98.5" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="98.5" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="98.5" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node7 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M155.02,-163.08C164.19,-147.04 173.57,-130.63 182.09,-115.72"/>
<polygon fill="none" stroke="midnightblue" points="151.88,-161.52 149.96,-171.94 157.96,-165 151.88,-161.52"/>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge8" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M263.28,-143.59C257.77,-134.03 252.34,-124.61 247.21,-115.72"/>
<polygon fill="none" stroke="midnightblue" points="260.33,-145.48 268.36,-152.39 266.4,-141.98 260.33,-145.48"/>
</g>
</g>
</svg>
