<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Python.CudaMarkopy.CudaMarkopyCLI Pages: 1 -->
<svg width="1087pt" height="2661pt"
 viewBox="0.00 0.00 1086.50 2661.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2657)">
<title>Python.CudaMarkopy.CudaMarkopyCLI</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="CUDA extension to MarkopyCLI.">
<polygon fill="#bfbfbf" stroke="black" points="544,-0.5 544,-115.5 792,-115.5 792,-0.5 544,-0.5"/>
<text text-anchor="middle" x="668" y="-101.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaMarkopyCLI</text>
<polyline fill="none" stroke="black" points="544,-94.5 792,-94.5 "/>
<text text-anchor="start" x="552" y="-80.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="552" y="-67.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="544,-60.5 792,-60.5 "/>
<text text-anchor="start" x="552" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ None __init__(self)</text>
<text text-anchor="start" x="552" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="552" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="552" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_python_1_1_markopy_1_1_markopy_c_l_i.html" target="_top" xlink:title="Top level model selector for Markopy CLI.">
<polygon fill="none" stroke="black" points="722.5,-152.5 722.5,-384.5 921.5,-384.5 921.5,-152.5 722.5,-152.5"/>
<text text-anchor="middle" x="822" y="-370.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkopyCLI</text>
<polyline fill="none" stroke="black" points="722.5,-363.5 921.5,-363.5 "/>
<text text-anchor="start" x="730.5" y="-349.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="730.5" y="-336.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="722.5,-329.5 921.5,-329.5 "/>
<text text-anchor="start" x="730.5" y="-315.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="730.5" y="-302.9" font-family="Helvetica,sans-Serif" font-size="12.00"> add_help=False)</text>
<text text-anchor="start" x="730.5" y="-289.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="730.5" y="-276.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="730.5" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="730.5" y="-250.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="730.5" y="-237.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="730.5" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
<text text-anchor="start" x="730.5" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="730.5" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def stub(self)</text>
<text text-anchor="start" x="730.5" y="-185.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def evaluate(self,</text>
<text text-anchor="start" x="730.5" y="-172.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str filename)</text>
<text text-anchor="start" x="730.5" y="-159.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments(sel)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M730.76,-143.97C723.5,-134.14 716.41,-124.55 709.77,-115.56"/>
<polygon fill="none" stroke="midnightblue" points="728.14,-146.31 736.89,-152.27 733.77,-142.15 728.14,-146.31"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_python_1_1_markopy_1_1_base_c_l_i.html" target="_top" xlink:title="Base CLI class to handle user interactions">
<polygon fill="none" stroke="black" points="873.5,-1787.5 873.5,-2253.5 1078.5,-2253.5 1078.5,-1787.5 873.5,-1787.5"/>
<text text-anchor="middle" x="976" y="-2239.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.BaseCLI</text>
<polyline fill="none" stroke="black" points="873.5,-2232.5 1078.5,-2232.5 "/>
<text text-anchor="start" x="881.5" y="-2218.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ parser</text>
<text text-anchor="start" x="881.5" y="-2205.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ print_help</text>
<text text-anchor="start" x="881.5" y="-2192.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="881.5" y="-2179.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<polyline fill="none" stroke="black" points="873.5,-2172.5 1078.5,-2172.5 "/>
<text text-anchor="start" x="881.5" y="-2158.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="881.5" y="-2145.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="881.5" y="-2132.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="881.5" y="-2119.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="881.5" y="-2106.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="881.5" y="-2093.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="881.5" y="-2080.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="881.5" y="-2067.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_arguments</text>
<text text-anchor="start" x="881.5" y="-2054.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="881.5" y="-2041.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def import_model(self,</text>
<text text-anchor="start" x="881.5" y="-2028.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str filename)</text>
<text text-anchor="start" x="881.5" y="-2015.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def train(self, str</text>
<text text-anchor="start" x="881.5" y="-2002.9" font-family="Helvetica,sans-Serif" font-size="12.00"> dataset, str seperator,</text>
<text text-anchor="start" x="881.5" y="-1989.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str output, bool output</text>
<text text-anchor="start" x="881.5" y="-1976.9" font-family="Helvetica,sans-Serif" font-size="12.00">_forced=False, bool bulk=False)</text>
<text text-anchor="start" x="881.5" y="-1963.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def export(self, str</text>
<text text-anchor="start" x="881.5" y="-1950.9" font-family="Helvetica,sans-Serif" font-size="12.00"> filename)</text>
<text text-anchor="start" x="881.5" y="-1937.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def generate(self,</text>
<text text-anchor="start" x="881.5" y="-1924.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, bool</text>
<text text-anchor="start" x="881.5" y="-1911.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bulk=False)</text>
<text text-anchor="start" x="881.5" y="-1898.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="881.5" y="-1885.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_import_path</text>
<text text-anchor="start" x="881.5" y="-1872.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="881.5" y="-1859.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_corpus_path</text>
<text text-anchor="start" x="881.5" y="-1846.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="881.5" y="-1833.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_export_path</text>
<text text-anchor="start" x="881.5" y="-1820.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="881.5" y="-1807.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="881.5" y="-1794.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M982.36,-1777.31C982.58,-1768.43 982.79,-1759.64 983,-1751 988.81,-1510.12 992.33,-1449.93 995,-1209 997.94,-943.68 996.39,-877.33 995,-612 994.56,-527.11 1028.25,-498.23 993,-421 977.44,-386.9 950.06,-357.33 921.72,-333.6"/>
<polygon fill="none" stroke="midnightblue" points="978.86,-1777.29 982.11,-1787.37 985.86,-1777.46 978.86,-1777.29"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="class_python_1_1_markopy_1_1_abstract_generation_model_c_l_i.html" target="_top" xlink:title="abstract class for generation capable models">
<polygon fill="none" stroke="black" points="500.5,-1460 500.5,-1536 733.5,-1536 733.5,-1460 500.5,-1460"/>
<text text-anchor="start" x="508.5" y="-1522.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractGeneration</text>
<text text-anchor="middle" x="617" y="-1509.4" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="500.5,-1502 733.5,-1502 "/>
<text text-anchor="middle" x="617" y="-1488.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="500.5,-1481 733.5,-1481 "/>
<text text-anchor="start" x="508.5" y="-1467.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node3&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M866.48,-1906.19C825.01,-1860.13 779.14,-1805.08 743,-1751 695.03,-1679.22 653.31,-1586.63 632.03,-1536.05"/>
<polygon fill="none" stroke="midnightblue" points="864.05,-1908.73 873.36,-1913.8 869.25,-1904.04 864.05,-1908.73"/>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="class_python_1_1_markopy_1_1_abstract_training_model_c_l_i.html" target="_top" xlink:title="abstract class for training capable models">
<polygon fill="none" stroke="black" points="774,-872.5 774,-948.5 986,-948.5 986,-872.5 774,-872.5"/>
<text text-anchor="start" x="782" y="-934.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractTraining</text>
<text text-anchor="middle" x="880" y="-921.9" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="774,-914.5 986,-914.5 "/>
<text text-anchor="middle" x="880" y="-900.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="774,-893.5 986,-893.5 "/>
<text text-anchor="start" x="782" y="-879.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node11 -->
<g id="edge13" class="edge">
<title>Node3&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M982.59,-1777.26C983.67,-1624.08 979.4,-1422.25 957,-1245 943.18,-1135.64 908.96,-1009.66 891.16,-948.57"/>
<polygon fill="none" stroke="midnightblue" points="979.09,-1777.26 982.52,-1787.28 986.09,-1777.31 979.09,-1777.26"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::ModelMatrix.">
<polygon fill="none" stroke="black" points="518,-421.5 518,-575.5 726,-575.5 726,-421.5 518,-421.5"/>
<text text-anchor="middle" x="622" y="-561.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrixCLI</text>
<polyline fill="none" stroke="black" points="518,-554.5 726,-554.5 "/>
<text text-anchor="start" x="526" y="-540.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="526" y="-527.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ fileIO</text>
<polyline fill="none" stroke="black" points="518,-520.5 726,-520.5 "/>
<text text-anchor="start" x="526" y="-506.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="526" y="-493.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="526" y="-480.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="526" y="-467.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="526" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="526" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="526" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M695.52,-413.69C704.28,-403.7 713.34,-393.37 722.39,-383.05"/>
<polygon fill="none" stroke="midnightblue" points="692.84,-411.44 688.88,-421.26 698.1,-416.05 692.84,-411.44"/>
</g>
<!-- Node13 -->
<g id="node13" class="node">
<title>Node13</title>
<g id="a_node13"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_model_matrix_c_l_i.html" target="_top" xlink:title="Python CLI wrapper for CudaModelMatrix.">
<polygon fill="none" stroke="black" points="449.5,-191.5 449.5,-345.5 662.5,-345.5 662.5,-191.5 449.5,-191.5"/>
<text text-anchor="start" x="457.5" y="-331.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaModel</text>
<text text-anchor="middle" x="556" y="-318.9" font-family="Helvetica,sans-Serif" font-size="12.00">MatrixCLI</text>
<polyline fill="none" stroke="black" points="449.5,-311.5 662.5,-311.5 "/>
<text text-anchor="start" x="457.5" y="-297.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="457.5" y="-284.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bInfinite</text>
<polyline fill="none" stroke="black" points="449.5,-277.5 662.5,-277.5 "/>
<text text-anchor="start" x="457.5" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self)</text>
<text text-anchor="start" x="457.5" y="-250.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="457.5" y="-237.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="457.5" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="457.5" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="457.5" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node13 -->
<g id="edge17" class="edge">
<title>Node4&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M597.09,-411.44C590.83,-389.82 584.16,-366.77 578.05,-345.67"/>
<polygon fill="none" stroke="midnightblue" points="593.79,-412.63 599.93,-421.26 600.51,-410.68 593.79,-412.63"/>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M617.24,-1449.27C618.04,-1289.43 620.63,-771.99 621.62,-575.84"/>
<polygon fill="none" stroke="midnightblue" points="613.74,-1449.7 617.19,-1459.72 620.74,-1449.74 613.74,-1449.7"/>
</g>
<!-- Node5&#45;&gt;Node11 -->
<g id="edge12" class="edge">
<title>Node5&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M637.88,-1450.52C688.53,-1337.75 817.16,-1051.39 863.25,-948.78"/>
<polygon fill="none" stroke="midnightblue" points="634.56,-1449.37 633.65,-1459.93 640.94,-1452.24 634.56,-1449.37"/>
</g>
<!-- Node5&#45;&gt;Node13 -->
<g id="edge18" class="edge">
<title>Node5&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M609.49,-1449.81C588.36,-1314.34 528.66,-912.38 509,-576 504.98,-507.23 498.68,-489.11 509,-421 512.8,-395.95 519.93,-369.34 527.52,-345.52"/>
<polygon fill="none" stroke="midnightblue" points="606.06,-1450.51 611.06,-1459.85 612.97,-1449.43 606.06,-1450.51"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix.html" target="_top" xlink:title="Abstract representation of a matrix based model.">
<polygon fill="none" stroke="black" points="272.5,-866 272.5,-955 461.5,-955 461.5,-866 272.5,-866"/>
<text text-anchor="middle" x="367" y="-941.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrix</text>
<polyline fill="none" stroke="black" points="272.5,-934 461.5,-934 "/>
<text text-anchor="middle" x="367" y="-920.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="272.5,-913 461.5,-913 "/>
<text text-anchor="start" x="280.5" y="-899.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def FastRandomWalk</text>
<text text-anchor="start" x="280.5" y="-886.4" font-family="Helvetica,sans-Serif" font-size="12.00">(int count, str wordlist,</text>
<text text-anchor="start" x="280.5" y="-873.4" font-family="Helvetica,sans-Serif" font-size="12.00"> int minlen, int maxlen)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node4 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M399.79,-856.78C444.19,-785.4 523.71,-657.54 574.61,-575.7"/>
<polygon fill="none" stroke="midnightblue" points="396.6,-855.28 394.29,-865.62 402.54,-858.98 396.6,-855.28"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="class_markov_1_1_a_p_i_1_1_model_matrix.html" target="_top" xlink:title="Class to flatten and reduce Markov::Model to a Matrix.">
<polygon fill="none" stroke="black" points="228,-1245.5 228,-1750.5 482,-1750.5 482,-1245.5 228,-1245.5"/>
<text text-anchor="middle" x="355" y="-1736.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::ModelMatrix</text>
<polyline fill="none" stroke="black" points="228,-1729.5 482,-1729.5 "/>
<text text-anchor="start" x="236" y="-1715.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char ** edgeMatrix</text>
<text text-anchor="start" x="236" y="-1702.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int ** valueMatrix</text>
<text text-anchor="start" x="236" y="-1689.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int matrixSize</text>
<text text-anchor="start" x="236" y="-1676.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char * matrixIndex</text>
<text text-anchor="start" x="236" y="-1663.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int * totalEdgeWeights</text>
<text text-anchor="start" x="236" y="-1650.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool ready</text>
<polyline fill="none" stroke="black" points="228,-1643.5 482,-1643.5 "/>
<text text-anchor="start" x="236" y="-1629.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ModelMatrix()</text>
<text text-anchor="start" x="236" y="-1616.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool ConstructMatrix()</text>
<text text-anchor="start" x="236" y="-1603.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void DumpJSON()</text>
<text text-anchor="start" x="236" y="-1590.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ int FastRandomWalk</text>
<text text-anchor="start" x="236" y="-1577.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="236" y="-1564.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *wordlistFileName,</text>
<text text-anchor="start" x="236" y="-1551.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="236" y="-1538.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool bFileIO=true)</text>
<text text-anchor="start" x="236" y="-1525.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Import(const char</text>
<text text-anchor="start" x="236" y="-1512.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="236" y="-1499.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="236" y="-1486.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="236" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="236" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int FastRandomWalk</text>
<text text-anchor="start" x="236" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="236" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::ofstream *wordlist,</text>
<text text-anchor="start" x="236" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="236" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool</text>
<text text-anchor="start" x="236" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO=true)</text>
<text text-anchor="start" x="236" y="-1382.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkPartition</text>
<text text-anchor="start" x="236" y="-1369.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std::</text>
<text text-anchor="start" x="236" y="-1356.9" font-family="Helvetica,sans-Serif" font-size="12.00">ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="236" y="-1343.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="236" y="-1330.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, bool bFileIO, int threads)</text>
<text text-anchor="start" x="236" y="-1317.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkThread</text>
<text text-anchor="start" x="236" y="-1304.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std</text>
<text text-anchor="start" x="236" y="-1291.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="236" y="-1278.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="236" y="-1265.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, int id, bool bFileIO)</text>
<text text-anchor="start" x="236" y="-1252.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool DeallocateMatrix()</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M360.36,-1235.27C362.56,-1128.01 364.88,-1015.14 366.11,-955.11"/>
<polygon fill="none" stroke="midnightblue" points="356.86,-1235.23 360.16,-1245.3 363.86,-1235.37 356.86,-1235.23"/>
</g>
<!-- Node14 -->
<g id="node14" class="node">
<title>Node14</title>
<g id="a_node14"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_c_u_d_a_model_matrix.html" target="_top" xlink:title="Extension of Markov::API::ModelMatrix which is modified to run on GPU devices.">
<polygon fill="none" stroke="black" points="0,-612.5 0,-1208.5 254,-1208.5 254,-612.5 0,-612.5"/>
<text text-anchor="start" x="8" y="-1194.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="127" y="-1181.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDAModelMatrix</text>
<polyline fill="none" stroke="black" points="0,-1174.5 254,-1174.5 "/>
<text text-anchor="start" x="8" y="-1160.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_edgeMatrix</text>
<text text-anchor="start" x="8" y="-1147.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_valueMatrix</text>
<text text-anchor="start" x="8" y="-1134.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_matrixIndex</text>
<text text-anchor="start" x="8" y="-1121.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_totalEdge</text>
<text text-anchor="start" x="8" y="-1108.9" font-family="Helvetica,sans-Serif" font-size="12.00">Weights</text>
<text text-anchor="start" x="8" y="-1095.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** device_outputBuffer</text>
<text text-anchor="start" x="8" y="-1082.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** outputBuffer</text>
<text text-anchor="start" x="8" y="-1069.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * flatEdgeMatrix</text>
<text text-anchor="start" x="8" y="-1056.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * flatValueMatrix</text>
<text text-anchor="start" x="8" y="-1043.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaBlocks</text>
<text text-anchor="start" x="8" y="-1030.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaThreads</text>
<text text-anchor="start" x="8" y="-1017.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int iterationsPerKernelThread</text>
<text text-anchor="start" x="8" y="-1004.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerSync</text>
<text text-anchor="start" x="8" y="-991.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerKernel</text>
<text text-anchor="start" x="8" y="-978.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int numberOfPartitions</text>
<text text-anchor="start" x="8" y="-965.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaGridSize</text>
<text text-anchor="start" x="8" y="-952.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaMemPerGrid</text>
<text text-anchor="start" x="8" y="-939.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int cudaPerKernelAllocationSize</text>
<text text-anchor="start" x="8" y="-926.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int alternatingKernels</text>
<text text-anchor="start" x="8" y="-913.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; unsigned long ** device</text>
<text text-anchor="start" x="8" y="-900.9" font-family="Helvetica,sans-Serif" font-size="12.00">_seeds</text>
<text text-anchor="start" x="8" y="-887.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; cudaStream_t * cudastreams</text>
<polyline fill="none" stroke="black" points="0,-880.5 254,-880.5 "/>
<text text-anchor="start" x="8" y="-866.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void MigrateMatrix()</text>
<text text-anchor="start" x="8" y="-853.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FlattenMatrix()</text>
<text text-anchor="start" x="8" y="-840.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FastRandom</text>
<text text-anchor="start" x="8" y="-827.9" font-family="Helvetica,sans-Serif" font-size="12.00">Walk(unsigned long int</text>
<text text-anchor="start" x="8" y="-814.9" font-family="Helvetica,sans-Serif" font-size="12.00"> n, const char *wordlistFileName,</text>
<text text-anchor="start" x="8" y="-801.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen, int maxLen, bool</text>
<text text-anchor="start" x="8" y="-788.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO, bool bInfinite)</text>
<text text-anchor="start" x="8" y="-775.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ char * AllocVRAMOutput</text>
<text text-anchor="start" x="8" y="-762.9" font-family="Helvetica,sans-Serif" font-size="12.00">Buffer(long int n, long int</text>
<text text-anchor="start" x="8" y="-749.9" font-family="Helvetica,sans-Serif" font-size="12.00"> singleGenMaxLen, long int CUDAKernel</text>
<text text-anchor="start" x="8" y="-736.9" font-family="Helvetica,sans-Serif" font-size="12.00">GridSize, long int sizePerGrid)</text>
<text text-anchor="start" x="8" y="-723.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void LaunchAsync</text>
<text text-anchor="start" x="8" y="-710.9" font-family="Helvetica,sans-Serif" font-size="12.00">Kernel(int kernelID, int</text>
<text text-anchor="start" x="8" y="-697.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
<text text-anchor="start" x="8" y="-684.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void prepKernel</text>
<text text-anchor="start" x="8" y="-671.9" font-family="Helvetica,sans-Serif" font-size="12.00">MemoryChannel(int numberOfStreams)</text>
<text text-anchor="start" x="8" y="-658.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void GatherAsync</text>
<text text-anchor="start" x="8" y="-645.9" font-family="Helvetica,sans-Serif" font-size="12.00">KernelOutput(int kernelID,</text>
<text text-anchor="start" x="8" y="-632.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bFileIO, std::ofstream</text>
<text text-anchor="start" x="8" y="-619.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &amp;wordlist)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node14 -->
<g id="edge20" class="edge">
<title>Node7&#45;&gt;Node14</title>
<path fill="none" stroke="midnightblue" d="M253.34,-1235.93C249.83,-1226.93 246.31,-1217.88 242.78,-1208.83"/>
<polygon fill="none" stroke="midnightblue" points="250.09,-1237.25 256.98,-1245.3 256.62,-1234.71 250.09,-1237.25"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="class_markov_1_1_a_p_i_1_1_markov_passwords.html" target="_top" xlink:title="Markov::Model with char represented nodes.">
<polygon fill="none" stroke="black" points="384.5,-1800.5 384.5,-2240.5 679.5,-2240.5 679.5,-1800.5 384.5,-1800.5"/>
<text text-anchor="middle" x="532" y="-2226.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::MarkovPasswords</text>
<polyline fill="none" stroke="black" points="384.5,-2219.5 679.5,-2219.5 "/>
<text text-anchor="start" x="392.5" y="-2205.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ifstream * datasetFile</text>
<text text-anchor="start" x="392.5" y="-2192.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * modelSavefile</text>
<text text-anchor="start" x="392.5" y="-2179.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * outputFile</text>
<polyline fill="none" stroke="black" points="384.5,-2172.5 679.5,-2172.5 "/>
<text text-anchor="start" x="392.5" y="-2158.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords()</text>
<text text-anchor="start" x="392.5" y="-2145.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords(const</text>
<text text-anchor="start" x="392.5" y="-2132.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *filename)</text>
<text text-anchor="start" x="392.5" y="-2119.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ifstream * OpenDataset</text>
<text text-anchor="start" x="392.5" y="-2106.9" font-family="Helvetica,sans-Serif" font-size="12.00">File(const char *filename)</text>
<text text-anchor="start" x="392.5" y="-2093.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="392.5" y="-2080.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="392.5" y="-2067.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="392.5" y="-2054.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ofstream * Save</text>
<text text-anchor="start" x="392.5" y="-2041.9" font-family="Helvetica,sans-Serif" font-size="12.00">(const char *filename)</text>
<text text-anchor="start" x="392.5" y="-2028.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Generate(unsigned</text>
<text text-anchor="start" x="392.5" y="-2015.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, const char</text>
<text text-anchor="start" x="392.5" y="-2002.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *wordlistFileName, int</text>
<text text-anchor="start" x="392.5" y="-1989.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen=6, int maxLen=12,</text>
<text text-anchor="start" x="392.5" y="-1976.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int threads=20)</text>
<text text-anchor="start" x="392.5" y="-1963.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Buff(const char</text>
<text text-anchor="start" x="392.5" y="-1950.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *str, double multiplier,</text>
<text text-anchor="start" x="392.5" y="-1937.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bDontAdjustSelfLoops</text>
<text text-anchor="start" x="392.5" y="-1924.9" font-family="Helvetica,sans-Serif" font-size="12.00">=true, bool bDontAdjustExtendedLoops=false)</text>
<text text-anchor="start" x="392.5" y="-1911.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void TrainThread(Markov</text>
<text text-anchor="start" x="392.5" y="-1898.9" font-family="Helvetica,sans-Serif" font-size="12.00">::API::Concurrency::ThreadShared</text>
<text text-anchor="start" x="392.5" y="-1885.9" font-family="Helvetica,sans-Serif" font-size="12.00">ListHandler *listhandler, char</text>
<text text-anchor="start" x="392.5" y="-1872.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter)</text>
<text text-anchor="start" x="392.5" y="-1859.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void GenerateThread</text>
<text text-anchor="start" x="392.5" y="-1846.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *outputLock,</text>
<text text-anchor="start" x="392.5" y="-1833.9" font-family="Helvetica,sans-Serif" font-size="12.00"> unsigned long int n, std</text>
<text text-anchor="start" x="392.5" y="-1820.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, int</text>
<text text-anchor="start" x="392.5" y="-1807.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge8" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M454.17,-1790.64C449.67,-1777.39 445.12,-1764.03 440.59,-1750.69"/>
<polygon fill="none" stroke="midnightblue" points="450.92,-1791.93 457.45,-1800.27 457.54,-1789.68 450.92,-1791.93"/>
</g>
<!-- Node12 -->
<g id="node12" class="node">
<title>Node12</title>
<g id="a_node12"><a xlink:href="class_python_1_1_markopy_1_1_markov_model.html" target="_top" xlink:title="Abstract representation of a markov model.">
<polygon fill="none" stroke="black" points="752,-1427.5 752,-1568.5 948,-1568.5 948,-1427.5 752,-1427.5"/>
<text text-anchor="middle" x="850" y="-1554.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovModel</text>
<polyline fill="none" stroke="black" points="752,-1547.5 948,-1547.5 "/>
<text text-anchor="middle" x="850" y="-1533.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="752,-1526.5 948,-1526.5 "/>
<text text-anchor="start" x="760" y="-1512.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Import(str filename)</text>
<text text-anchor="start" x="760" y="-1499.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Export(str filename)</text>
<text text-anchor="start" x="760" y="-1486.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Train(str dataset,</text>
<text text-anchor="start" x="760" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str seperator, int threads)</text>
<text text-anchor="start" x="760" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Generate(int count,</text>
<text text-anchor="start" x="760" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, int minlen,</text>
<text text-anchor="start" x="760" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxlen, int threads)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node12 -->
<g id="edge15" class="edge">
<title>Node8&#45;&gt;Node12</title>
<path fill="none" stroke="midnightblue" d="M685.73,-1836.9C706.21,-1808.95 725.98,-1779.8 743,-1751 777.58,-1692.49 806.92,-1620.71 826.08,-1568.75"/>
<polygon fill="none" stroke="midnightblue" points="682.77,-1835.01 679.65,-1845.14 688.4,-1839.17 682.77,-1835.01"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="class_markov_1_1_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="426,-2290.5 426,-2652.5 638,-2652.5 638,-2290.5 426,-2290.5"/>
<text text-anchor="middle" x="532" y="-2638.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::Model&lt; char &gt;</text>
<polyline fill="none" stroke="black" points="426,-2631.5 638,-2631.5 "/>
<text text-anchor="start" x="434" y="-2617.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::map&lt; char, Node</text>
<text text-anchor="start" x="434" y="-2604.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; nodes</text>
<text text-anchor="start" x="434" y="-2591.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; Node&lt; char &gt; * starterNode</text>
<text text-anchor="start" x="434" y="-2578.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="434" y="-2565.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; edges</text>
<polyline fill="none" stroke="black" points="426,-2558.5 638,-2558.5 "/>
<text text-anchor="start" x="434" y="-2544.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Model()</text>
<text text-anchor="start" x="434" y="-2531.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ char * RandomWalk(Markov</text>
<text text-anchor="start" x="434" y="-2518.9" font-family="Helvetica,sans-Serif" font-size="12.00">::Random::RandomEngine</text>
<text text-anchor="start" x="434" y="-2505.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *randomEngine, int minSetting,</text>
<text text-anchor="start" x="434" y="-2492.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxSetting, char *buffer)</text>
<text text-anchor="start" x="434" y="-2479.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void AdjustEdge(const</text>
<text text-anchor="start" x="434" y="-2466.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *payload, long</text>
<text text-anchor="start" x="434" y="-2453.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int occurrence)</text>
<text text-anchor="start" x="434" y="-2440.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(std::ifstream *)</text>
<text text-anchor="start" x="434" y="-2427.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(const char</text>
<text text-anchor="start" x="434" y="-2414.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="434" y="-2401.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(std::ofstream *)</text>
<text text-anchor="start" x="434" y="-2388.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(const char</text>
<text text-anchor="start" x="434" y="-2375.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="434" y="-2362.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Node&lt; char &gt; * StarterNode()</text>
<text text-anchor="start" x="434" y="-2349.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="434" y="-2336.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; * Edges()</text>
<text text-anchor="start" x="434" y="-2323.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::map&lt; char, Node</text>
<text text-anchor="start" x="434" y="-2310.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; * Nodes()</text>
<text text-anchor="start" x="434" y="-2297.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void OptimizeEdgeOrder()</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge9" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M532,-2280.08C532,-2267.08 532,-2253.93 532,-2240.81"/>
<polygon fill="none" stroke="midnightblue" points="528.5,-2280.46 532,-2290.46 535.5,-2280.46 528.5,-2280.46"/>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="class_python_1_1_markopy_1_1_markov_passwords_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::MarkovPasswords.">
<polygon fill="none" stroke="black" points="744.5,-447.5 744.5,-549.5 983.5,-549.5 983.5,-447.5 744.5,-447.5"/>
<text text-anchor="middle" x="864" y="-535.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovPasswordsCLI</text>
<polyline fill="none" stroke="black" points="744.5,-528.5 983.5,-528.5 "/>
<text text-anchor="start" x="752.5" y="-514.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<polyline fill="none" stroke="black" points="744.5,-507.5 983.5,-507.5 "/>
<text text-anchor="start" x="752.5" y="-493.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="752.5" y="-480.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="752.5" y="-467.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="752.5" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00"> wordlist)</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node2 -->
<g id="edge10" class="edge">
<title>Node10&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M852.96,-437.59C849.96,-421.29 846.61,-403.08 843.24,-384.83"/>
<polygon fill="none" stroke="midnightblue" points="849.53,-438.26 854.78,-447.46 856.41,-437 849.53,-438.26"/>
</g>
<!-- Node11&#45;&gt;Node10 -->
<g id="edge11" class="edge">
<title>Node11&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M878.16,-862.38C875.12,-784.51 869.08,-629.65 865.96,-549.76"/>
<polygon fill="none" stroke="midnightblue" points="874.66,-862.54 878.55,-872.39 881.66,-862.26 874.66,-862.54"/>
</g>
<!-- Node12&#45;&gt;Node10 -->
<g id="edge14" class="edge">
<title>Node12&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M819.85,-1417.57C799.85,-1360.49 775.43,-1281.19 765,-1209 727.06,-946.39 671.32,-860.25 765,-612 773.73,-588.88 789.61,-567.42 806.14,-549.58"/>
<polygon fill="none" stroke="midnightblue" points="816.64,-1418.99 823.27,-1427.25 823.24,-1416.65 816.64,-1418.99"/>
</g>
<!-- Node13&#45;&gt;Node1 -->
<g id="edge16" class="edge">
<title>Node13&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M601.68,-182.46C613.76,-159.98 626.5,-136.26 637.55,-115.68"/>
<polygon fill="none" stroke="midnightblue" points="598.56,-180.88 596.91,-191.34 604.73,-184.19 598.56,-180.88"/>
</g>
<!-- Node14&#45;&gt;Node13 -->
<g id="edge19" class="edge">
<title>Node14&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M259.66,-617.28C260.77,-615.51 261.88,-613.75 263,-612 326.27,-512.9 416.2,-412.15 479.7,-345.82"/>
<polygon fill="none" stroke="midnightblue" points="256.42,-615.87 254.15,-626.22 262.38,-619.54 256.42,-615.87"/>
</g>
<!-- Node15 -->
<g id="node15" class="node">
<title>Node15</title>
<g id="a_node15"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_c_u_d_a_device_controller.html" target="_top" xlink:title="Controller class for CUDA device.">
<polygon fill="none" stroke="black" points="32,-1349.5 32,-1646.5 210,-1646.5 210,-1349.5 32,-1349.5"/>
<text text-anchor="start" x="40" y="-1632.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="121" y="-1619.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDADeviceController</text>
<polyline fill="none" stroke="black" points="32,-1612.5 210,-1612.5 "/>
<text text-anchor="middle" x="121" y="-1598.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="32,-1591.5 210,-1591.5 "/>
<text text-anchor="start" x="40" y="-1577.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static __host__ void</text>
<text text-anchor="start" x="40" y="-1564.9" font-family="Helvetica,sans-Serif" font-size="12.00"> ListCudaDevices()</text>
<text text-anchor="start" x="40" y="-1551.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ int</text>
<text text-anchor="start" x="40" y="-1538.9" font-family="Helvetica,sans-Serif" font-size="12.00"> CudaCheckNotifyErr</text>
<text text-anchor="start" x="40" y="-1525.9" font-family="Helvetica,sans-Serif" font-size="12.00">(cudaError_t _status,</text>
<text text-anchor="start" x="40" y="-1512.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *msg, bool</text>
<text text-anchor="start" x="40" y="-1499.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bExit=true)</text>
<text text-anchor="start" x="40" y="-1486.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMalloc2DToFlat(T</text>
<text text-anchor="start" x="40" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, int row, int col)</text>
<text text-anchor="start" x="40" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMemcpy2DToFlat(T</text>
<text text-anchor="start" x="40" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *dst, T **src, int row,</text>
<text text-anchor="start" x="40" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
<text text-anchor="start" x="40" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1382.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMigrate2DFlat(T</text>
<text text-anchor="start" x="40" y="-1369.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, T **src, int row,</text>
<text text-anchor="start" x="40" y="-1356.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
</a>
</g>
</g>
<!-- Node15&#45;&gt;Node14 -->
<g id="edge21" class="edge">
<title>Node15&#45;&gt;Node14</title>
<path fill="none" stroke="midnightblue" d="M122.62,-1339.05C123.03,-1298.53 123.49,-1253.61 123.96,-1208.54"/>
<polygon fill="none" stroke="midnightblue" points="119.12,-1339.22 122.51,-1349.25 126.12,-1339.29 119.12,-1339.22"/>
</g>
</g>
</svg>
