<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_markov_1_1_edge" kind="class" language="C++" prot="public">
    <compoundname>Markov::Edge</compoundname>
    <includes refid="edge_8h" local="no">edge.h</includes>
    <templateparamlist>
      <param>
        <type>typename NodeStorageType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_markov_1_1_edge_1a1f636c80a30900dfbfa5b695402cceb9" prot="private" static="no" mutable="no">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Node&lt;NodeStorageType&gt;* Markov::Edge&lt; NodeStorageType &gt;::_left</definition>
        <argsstring></argsstring>
        <name>_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="64" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_markov_1_1_edge_1a7f8221d3950f12a673888b3ad60e35b1" prot="private" static="no" mutable="no">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Node&lt;NodeStorageType&gt;* Markov::Edge&lt; NodeStorageType &gt;::_right</definition>
        <argsstring></argsstring>
        <name>_right</name>
        <briefdescription>
<para>source node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="65" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_markov_1_1_edge_1a5c36d8455140a5fab9a87398a048e1b2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Markov::Edge&lt; NodeStorageType &gt;::_weight</definition>
        <argsstring></argsstring>
        <name>_weight</name>
        <briefdescription>
<para>target node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="66" column="5" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_markov_1_1_edge_1a893ea498a247e09b2a7e2424f026a137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Markov::Edge&lt; NodeStorageType &gt;::Edge</definition>
        <argsstring>()</argsstring>
        <name>Edge</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="1" column="0" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="6" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a7813ff80fd97d5c0bd4fb339e2e5764b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Markov::Edge&lt; NodeStorageType &gt;::Edge</definition>
        <argsstring>(Node&lt; NodeStorageType &gt; *_left, Node&lt; NodeStorageType &gt; *_right)</argsstring>
        <name>Edge</name>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
          <declname>_left</declname>
        </param>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
          <declname>_right</declname>
        </param>
        <briefdescription>
<para>Constructor. Initialize edge with given RightNode and LeftNode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_left</parametername>
</parameternamelist>
<parameterdescription>
<para>- Left node of this edge. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_right</parametername>
</parameternamelist>
<parameterdescription>
<para>- Right node of this edge. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="1" column="0" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a967446f716ab4d52265631e5f0f6a898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Markov::Edge&lt; NodeStorageType &gt;::AdjustEdge</definition>
        <argsstring>(uint64_t offset)</argsstring>
        <name>AdjustEdge</name>
        <param>
          <type>uint64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Adjust the edge EdgeWeight with offset. Adds the offset parameter to the edge EdgeWeight. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>- NodeValue to be added to the EdgeWeight </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="32" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a97e403fa0cf2666b2f142f28372de990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt; NodeStorageType &gt; * Markov::Edge&lt; NodeStorageType &gt;::TraverseNode</definition>
        <argsstring>()</argsstring>
        <name>TraverseNode</name>
        <briefdescription>
<para>Traverse this edge to RightNode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Right node. If this is a terminator node, return NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="37" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a174cd2f818b7c929decee6f2bcea7025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Markov::Edge&lt; NodeStorageType &gt;::SetLeftEdge</definition>
        <argsstring>(Node&lt; NodeStorageType &gt; *)</argsstring>
        <name>SetLeftEdge</name>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>Set LeftNode of this edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>- <ref refid="class_markov_1_1_node" kindref="compound">Node</ref> to be linked with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="42" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1add40b694fce402c316540c50d0fd3b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Markov::Edge&lt; NodeStorageType &gt;::SetRightEdge</definition>
        <argsstring>(Node&lt; NodeStorageType &gt; *)</argsstring>
        <name>SetRightEdge</name>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>Set RightNode of this edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>- <ref refid="class_markov_1_1_node" kindref="compound">Node</ref> to be linked with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="46" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a2b1e5a6e6f81502cd8ac6b20ed38b677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t Markov::Edge&lt; NodeStorageType &gt;::EdgeWeight</definition>
        <argsstring>()</argsstring>
        <name>EdgeWeight</name>
        <briefdescription>
<para>return edge&apos;s EdgeWeight. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>edge&apos;s EdgeWeight. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="51" column="10" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a3975b42a420de76e216d343dca059f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt; NodeStorageType &gt; * Markov::Edge&lt; NodeStorageType &gt;::LeftNode</definition>
        <argsstring>()</argsstring>
        <name>LeftNode</name>
        <briefdescription>
<para>return edge&apos;s LeftNode </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>edge&apos;s LeftNode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="56" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a2e7d14e46631c85c84f6f8f1dd2949cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt; NodeStorageType &gt; * Markov::Edge&lt; NodeStorageType &gt;::RightNode</definition>
        <argsstring>()</argsstring>
        <name>RightNode</name>
        <briefdescription>
<para>return edge&apos;s RightNode </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>edge&apos;s RightNode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="61" column="6" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_markov_1_1_edge" kindref="compound">Edge</ref> class used to link nodes in the model together. </para>
    </briefdescription>
    <detaileddescription>
<para>Has LeftNode, RightNode, and EdgeWeight of the edge. Edges are <emphasis>UNIDIRECTIONAL</emphasis> in this model. They can only be traversed LeftNode to RightNode. </para>
    </detaileddescription>
    <location file="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" line="15" column="11" bodyfile="/media/ignis/HDD/Repositories/MarkovPasswords/MarkovModel/src/edge.h" bodystart="15" bodyend="67"/>
    <listofallmembers>
      <member refid="class_markov_1_1_edge_1a1f636c80a30900dfbfa5b695402cceb9" prot="private" virt="non-virtual"><scope>Markov::Edge</scope><name>_left</name></member>
      <member refid="class_markov_1_1_edge_1a7f8221d3950f12a673888b3ad60e35b1" prot="private" virt="non-virtual"><scope>Markov::Edge</scope><name>_right</name></member>
      <member refid="class_markov_1_1_edge_1a5c36d8455140a5fab9a87398a048e1b2" prot="private" virt="non-virtual"><scope>Markov::Edge</scope><name>_weight</name></member>
      <member refid="class_markov_1_1_edge_1a967446f716ab4d52265631e5f0f6a898" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>AdjustEdge</name></member>
      <member refid="class_markov_1_1_edge_1a893ea498a247e09b2a7e2424f026a137" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>Edge</name></member>
      <member refid="class_markov_1_1_edge_1a7813ff80fd97d5c0bd4fb339e2e5764b" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>Edge</name></member>
      <member refid="class_markov_1_1_edge_1a2b1e5a6e6f81502cd8ac6b20ed38b677" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>EdgeWeight</name></member>
      <member refid="class_markov_1_1_edge_1a3975b42a420de76e216d343dca059f88" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>LeftNode</name></member>
      <member refid="class_markov_1_1_edge_1a2e7d14e46631c85c84f6f8f1dd2949cd" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>RightNode</name></member>
      <member refid="class_markov_1_1_edge_1a174cd2f818b7c929decee6f2bcea7025" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>SetLeftEdge</name></member>
      <member refid="class_markov_1_1_edge_1add40b694fce402c316540c50d0fd3b3c" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>SetRightEdge</name></member>
      <member refid="class_markov_1_1_edge_1a97e403fa0cf2666b2f142f28372de990" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>TraverseNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
