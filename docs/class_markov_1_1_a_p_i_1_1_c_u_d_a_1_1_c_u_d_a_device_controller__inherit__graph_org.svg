<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Markov::API::CUDA::CUDADeviceController Pages: 1 -->
<svg width="490pt" height="1282pt"
 viewBox="0.00 0.00 489.50 1282.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1278)">
<title>Markov::API::CUDA::CUDADeviceController</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Controller class for CUDA device.">
<polygon fill="#bfbfbf" stroke="black" points="163,-976.5 163,-1273.5 341,-1273.5 341,-976.5 163,-976.5"/>
<text text-anchor="start" x="171" y="-1259.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="252" y="-1246.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDADeviceController</text>
<polyline fill="none" stroke="black" points="163,-1239.5 341,-1239.5 "/>
<text text-anchor="middle" x="252" y="-1225.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="163,-1218.5 341,-1218.5 "/>
<text text-anchor="start" x="171" y="-1204.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static __host__ void</text>
<text text-anchor="start" x="171" y="-1191.9" font-family="Helvetica,sans-Serif" font-size="12.00"> ListCudaDevices()</text>
<text text-anchor="start" x="171" y="-1178.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ int</text>
<text text-anchor="start" x="171" y="-1165.9" font-family="Helvetica,sans-Serif" font-size="12.00"> CudaCheckNotifyErr</text>
<text text-anchor="start" x="171" y="-1152.9" font-family="Helvetica,sans-Serif" font-size="12.00">(cudaError_t _status,</text>
<text text-anchor="start" x="171" y="-1139.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *msg, bool</text>
<text text-anchor="start" x="171" y="-1126.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bExit=true)</text>
<text text-anchor="start" x="171" y="-1113.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="171" y="-1100.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMalloc2DToFlat(T</text>
<text text-anchor="start" x="171" y="-1087.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, int row, int col)</text>
<text text-anchor="start" x="171" y="-1074.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="171" y="-1061.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMemcpy2DToFlat(T</text>
<text text-anchor="start" x="171" y="-1048.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *dst, T **src, int row,</text>
<text text-anchor="start" x="171" y="-1035.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
<text text-anchor="start" x="171" y="-1022.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="171" y="-1009.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMigrate2DFlat(T</text>
<text text-anchor="start" x="171" y="-996.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, T **src, int row,</text>
<text text-anchor="start" x="171" y="-983.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_c_u_d_a_model_matrix.html" target="_top" xlink:title="Extension of Markov::API::ModelMatrix which is modified to run on GPU devices.">
<polygon fill="none" stroke="black" points="0,-343.5 0,-939.5 254,-939.5 254,-343.5 0,-343.5"/>
<text text-anchor="start" x="8" y="-925.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="127" y="-912.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDAModelMatrix</text>
<polyline fill="none" stroke="black" points="0,-905.5 254,-905.5 "/>
<text text-anchor="start" x="8" y="-891.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_edgeMatrix</text>
<text text-anchor="start" x="8" y="-878.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_valueMatrix</text>
<text text-anchor="start" x="8" y="-865.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_matrixIndex</text>
<text text-anchor="start" x="8" y="-852.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_totalEdge</text>
<text text-anchor="start" x="8" y="-839.9" font-family="Helvetica,sans-Serif" font-size="12.00">Weights</text>
<text text-anchor="start" x="8" y="-826.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** device_outputBuffer</text>
<text text-anchor="start" x="8" y="-813.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** outputBuffer</text>
<text text-anchor="start" x="8" y="-800.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * flatEdgeMatrix</text>
<text text-anchor="start" x="8" y="-787.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * flatValueMatrix</text>
<text text-anchor="start" x="8" y="-774.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaBlocks</text>
<text text-anchor="start" x="8" y="-761.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaThreads</text>
<text text-anchor="start" x="8" y="-748.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int iterationsPerKernelThread</text>
<text text-anchor="start" x="8" y="-735.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerSync</text>
<text text-anchor="start" x="8" y="-722.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerKernel</text>
<text text-anchor="start" x="8" y="-709.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int numberOfPartitions</text>
<text text-anchor="start" x="8" y="-696.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaGridSize</text>
<text text-anchor="start" x="8" y="-683.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaMemPerGrid</text>
<text text-anchor="start" x="8" y="-670.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int cudaPerKernelAllocationSize</text>
<text text-anchor="start" x="8" y="-657.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int alternatingKernels</text>
<text text-anchor="start" x="8" y="-644.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; unsigned long ** device</text>
<text text-anchor="start" x="8" y="-631.9" font-family="Helvetica,sans-Serif" font-size="12.00">_seeds</text>
<text text-anchor="start" x="8" y="-618.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; cudaStream_t * cudastreams</text>
<polyline fill="none" stroke="black" points="0,-611.5 254,-611.5 "/>
<text text-anchor="start" x="8" y="-597.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void MigrateMatrix()</text>
<text text-anchor="start" x="8" y="-584.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FlattenMatrix()</text>
<text text-anchor="start" x="8" y="-571.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FastRandom</text>
<text text-anchor="start" x="8" y="-558.9" font-family="Helvetica,sans-Serif" font-size="12.00">Walk(unsigned long int</text>
<text text-anchor="start" x="8" y="-545.9" font-family="Helvetica,sans-Serif" font-size="12.00"> n, const char *wordlistFileName,</text>
<text text-anchor="start" x="8" y="-532.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen, int maxLen, bool</text>
<text text-anchor="start" x="8" y="-519.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO, bool bInfinite)</text>
<text text-anchor="start" x="8" y="-506.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ char * AllocVRAMOutput</text>
<text text-anchor="start" x="8" y="-493.9" font-family="Helvetica,sans-Serif" font-size="12.00">Buffer(long int n, long int</text>
<text text-anchor="start" x="8" y="-480.9" font-family="Helvetica,sans-Serif" font-size="12.00"> singleGenMaxLen, long int CUDAKernel</text>
<text text-anchor="start" x="8" y="-467.9" font-family="Helvetica,sans-Serif" font-size="12.00">GridSize, long int sizePerGrid)</text>
<text text-anchor="start" x="8" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void LaunchAsync</text>
<text text-anchor="start" x="8" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00">Kernel(int kernelID, int</text>
<text text-anchor="start" x="8" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
<text text-anchor="start" x="8" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void prepKernel</text>
<text text-anchor="start" x="8" y="-402.9" font-family="Helvetica,sans-Serif" font-size="12.00">MemoryChannel(int numberOfStreams)</text>
<text text-anchor="start" x="8" y="-389.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void GatherAsync</text>
<text text-anchor="start" x="8" y="-376.9" font-family="Helvetica,sans-Serif" font-size="12.00">KernelOutput(int kernelID,</text>
<text text-anchor="start" x="8" y="-363.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bFileIO, std::ofstream</text>
<text text-anchor="start" x="8" y="-350.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &amp;wordlist)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M211.09,-966.43C208.82,-957.66 206.5,-948.72 204.15,-939.67"/>
<polygon fill="none" stroke="midnightblue" points="207.75,-967.46 213.65,-976.26 214.52,-965.7 207.75,-967.46"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_random_1_1_marsaglia.html" target="_top" xlink:title="Extension of Markov::Random::Marsaglia which is capable o working on device space.">
<polygon fill="none" stroke="black" points="272.5,-584 272.5,-699 481.5,-699 481.5,-584 272.5,-584"/>
<text text-anchor="start" x="280.5" y="-685.4" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="377" y="-672.4" font-family="Helvetica,sans-Serif" font-size="12.00">Random::Marsaglia</text>
<polyline fill="none" stroke="black" points="272.5,-665 481.5,-665 "/>
<text text-anchor="middle" x="377" y="-651.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="272.5,-644 481.5,-644 "/>
<text text-anchor="start" x="280.5" y="-630.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ static unsigned long</text>
<text text-anchor="start" x="280.5" y="-617.4" font-family="Helvetica,sans-Serif" font-size="12.00"> * MigrateToVRAM(Markov</text>
<text text-anchor="start" x="280.5" y="-604.4" font-family="Helvetica,sans-Serif" font-size="12.00">::API::CUDA::Random::Marsaglia</text>
<text text-anchor="start" x="280.5" y="-591.4" font-family="Helvetica,sans-Serif" font-size="12.00"> *MEarr, long int gridSize)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node5 -->
<g id="edge4" class="edge">
<title>Node1&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M292.94,-966.31C316.74,-874.61 345.31,-764.58 362.26,-699.27"/>
<polygon fill="none" stroke="midnightblue" points="289.48,-965.7 290.35,-976.26 296.25,-967.46 289.48,-965.7"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_model_matrix_c_l_i.html" target="_top" xlink:title="Python CLI wrapper for CudaModelMatrix.">
<polygon fill="none" stroke="black" points="20.5,-152.5 20.5,-306.5 233.5,-306.5 233.5,-152.5 20.5,-152.5"/>
<text text-anchor="start" x="28.5" y="-292.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaModel</text>
<text text-anchor="middle" x="127" y="-279.9" font-family="Helvetica,sans-Serif" font-size="12.00">MatrixCLI</text>
<polyline fill="none" stroke="black" points="20.5,-272.5 233.5,-272.5 "/>
<text text-anchor="start" x="28.5" y="-258.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="28.5" y="-245.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bInfinite</text>
<polyline fill="none" stroke="black" points="20.5,-238.5 233.5,-238.5 "/>
<text text-anchor="start" x="28.5" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self)</text>
<text text-anchor="start" x="28.5" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="28.5" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="28.5" y="-185.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="28.5" y="-172.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="28.5" y="-159.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node2&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M127,-333.13C127,-323.84 127,-314.93 127,-306.51"/>
<polygon fill="none" stroke="midnightblue" points="123.5,-333.35 127,-343.35 130.5,-333.35 123.5,-333.35"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_markopy_c_l_i.html" target="_top" xlink:title="CUDA extension to MarkopyCLI.">
<polygon fill="none" stroke="black" points="3,-0.5 3,-115.5 251,-115.5 251,-0.5 3,-0.5"/>
<text text-anchor="middle" x="127" y="-101.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaMarkopyCLI</text>
<polyline fill="none" stroke="black" points="3,-94.5 251,-94.5 "/>
<text text-anchor="start" x="11" y="-80.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="11" y="-67.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="3,-60.5 251,-60.5 "/>
<text text-anchor="start" x="11" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ None __init__(self)</text>
<text text-anchor="start" x="11" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="11" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="11" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M127,-142.06C127,-133.08 127,-124.13 127,-115.61"/>
<polygon fill="none" stroke="midnightblue" points="123.5,-142.18 127,-152.18 130.5,-142.18 123.5,-142.18"/>
</g>
</g>
</svg>
