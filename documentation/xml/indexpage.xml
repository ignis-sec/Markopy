<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Markov Passwords</title>
    <briefdescription>
<para>Table of Contents </para>
    </briefdescription>
    <detaileddescription>
<para>Table of Contents<ulink url="https://github.com/FlameOfIgnis/MarkovPasswords/graphs/contributors"><image type="html" name="MarkovPasswords.svg?style=for-the-badge" inline="yes"></image>
</ulink> <ulink url="https://github.com/FlameOfIgnis/MarkovPasswords/network/members"><image type="html" name="MarkovPasswords.svg?style=for-the-badge" inline="yes"></image>
</ulink> <ulink url="https://github.com/FlameOfIgnis/MarkovPasswords/stargazers"><image type="html" name="MarkovPasswords.svg?style=for-the-badge" inline="yes"></image>
</ulink> <ulink url="https://github.com/FlameOfIgnis/MarkovPasswords/issues"><image type="html" name="MarkovPasswords.svg?style=for-the-badge" inline="yes"></image>
</ulink> <image type="html" name="MarkovPasswords?style=for-the-badge" inline="yes"></image>
</para>
<para><linebreak/>
 </para>
<para></para>
<para><heading level="3"><ref refid="namespace_markov" kindref="compound">Markov</ref> Passwords</heading>
</para>
<para></para>
<para>Generate wordlists with markov models. <linebreak/>
 <ulink url="https://github.com/FlameOfIgnis/MarkovPasswords/wiki">Wiki</ulink> · <ulink url="https://markov.ignis.wtf">Complete documentation</ulink> · <ulink url="https://github.com/FlameOfIgnis/MarkovPasswords/issues">Report Bug</ulink> · <ulink url="https://github.com/FlameOfIgnis/MarkovPasswords/pulls">Add a Bug</ulink> </para>
<para>&lt;details open=&quot;open&quot;&gt;</para>
<para><orderedlist>
<listitem>
<para><ulink url="#about-the-project">About The Project</ulink> <itemizedlist>
<listitem>
<para><ulink url="#built-with">Built With</ulink> </para>
</listitem>
</itemizedlist>
</para>
</listitem>
<listitem>
<para><ulink url="#getting-started">Getting Started</ulink> <itemizedlist>
<listitem>
<para><ulink url="#prerequisites">Prerequisites</ulink> </para>
</listitem>
<listitem>
<para><ulink url="#installation">Installation</ulink> </para>
</listitem>
</itemizedlist>
</para>
</listitem>
<listitem>
<para><ulink url="#contributing">Contributing</ulink> </para>
</listitem>
<listitem>
<para><ulink url="#contact">Contact</ulink> </para>
</listitem>
</orderedlist>
&lt;/details&gt;</para>
<para><hruler/>
</para>
<sect1 id="index_1autotoc_md2">
<title>About The Project</title>
<para>This project aims to generate wordlists using markov models.</para>
<sect2 id="index_1autotoc_md3">
<title>Built With</title>
<para><itemizedlist>
<listitem><para>CPP, with dependecies: boost, python3-dev, QT-5.</para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
<sect1 id="index_1autotoc_md4">
<title>Getting Started</title>
<para>If you&apos;d just like to use the project without contributing, check out the releases page. If you want to build, check out wiki for building the project.</para>
<para><hruler/>
</para>
<sect2 id="index_1autotoc_md6">
<title>Prerequisites</title>
<sect4 id="index_1autotoc_md7">
<title>MarkovModel</title>
<para><itemizedlist>
<listitem><para>Make for linux, Visual Studio/MSBuild for Windows.</para>
</listitem></itemizedlist>
</para>
</sect4>
<sect4 id="index_1autotoc_md8">
<title>MarkovPasswords</title>
<para><itemizedlist>
<listitem><para>Boost.ProgramOptions (tested on 1.76.0)</para>
</listitem></itemizedlist>
</para>
</sect4>
<sect4 id="index_1autotoc_md9">
<title>Markopy</title>
<para><itemizedlist>
<listitem><para>Boost.Python (tested on 1.76.0)</para>
</listitem><listitem><para>Python development package (tested on python 3.8)</para>
</listitem></itemizedlist>
</para>
</sect4>
<sect4 id="index_1autotoc_md10">
<title>MarkovPasswordsGUI</title>
<para><itemizedlist>
<listitem><para>QT development environment.</para>
</listitem></itemizedlist>
</para>
<para><hruler/>
</para>
</sect4>
</sect2>
<sect2 id="index_1autotoc_md12">
<title>Installing Dependencies</title>
<sect4 id="index_1autotoc_md13">
<title>Windows</title>
<para><itemizedlist>
<listitem><para>QT: Install <ulink url="https://doc.qt.io/qt-5/windows.html">QT For Windows</ulink></para>
</listitem><listitem><para>Boost:<itemizedlist>
<listitem><para>Download Boost from <ulink url="https://www.boost.org/users/download/">its website</ulink></para>
</listitem><listitem><para>Unzip the contents.</para>
</listitem><listitem><para>Launch &quot;Visual Studio Developer Command Prompt&quot;</para>
</listitem><listitem><para>Move to the boost installation directory. Run <computeroutput>bootstrap.bat</computeroutput></para>
</listitem><listitem><para>Run <computeroutput>b2</computeroutput>.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Python: You can use the windows app store to download python runtime and libraries.</para>
</listitem></itemizedlist>
</para>
</sect4>
<sect4 id="index_1autotoc_md14">
<title>Linux</title>
<para><itemizedlist>
<listitem><para>QT: Follow <ulink url="https://wiki.qt.io/Install_Qt_5_on_Ubuntu">this guide</ulink> to install QT on Linux.</para>
</listitem><listitem><para>Boost: run <computeroutput>sudo apt-get install libboost-all-dev</computeroutput></para>
</listitem><listitem><para>Python: run <computeroutput>sudo apt-get install python3</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><hruler/>
</para>
</sect4>
</sect2>
<sect2 id="index_1autotoc_md16">
<title>Installation</title>
<para>See the Wiki Page</para>
<para><hruler/>
</para>
</sect2>
<sect2 id="index_1autotoc_md18">
<title>Building</title>
<para>Building process can be fairly complicated depending on the environment.</para>
</sect2>
</sect1>
<sect1 id="index_1autotoc_md19">
<title>Linux</title>
<para>If you&apos;ve set up the dependencies, you can just build the project with make. List of directives is below.</para>
<para><programlisting filename=".makefile"><codeline><highlight class="normal">.PHONY:<sp/>all</highlight></codeline>
<codeline><highlight class="normal">all:<sp/>model<sp/>mp</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">model:<sp/>$(INCLUDE)/$(MM_LIB)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">mp:<sp/>$(BIN)/$(MP_EXEC)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">markopy:<sp/>$(BIN)/$(MPY_SO)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">.PHONY:<sp/>clean</highlight></codeline>
<codeline><highlight class="normal">clean:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$(RM)<sp/>-r<sp/>$(BIN)/*</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="index_1autotoc_md20">
<title>Windows</title>
<para>Set up correct environment variables for BOOST_ROOT% (folder containing boost, libs, stage, tools) and PYTHON_PATH% (folder containing include, lib, libs, Tools, python.exe/python3.exe).</para>
<para>If you&apos;ve set up the dependencies and environment variables correctly, you can open the solution with Visual Studio and build with that.</para>
<para><hruler/>
</para>
</sect1>
<sect1 id="index_1autotoc_md22">
<title>Known Common issues</title>
<sect2 id="index_1autotoc_md23">
<title>Linux</title>
<sect3 id="index_1autotoc_md24">
<title>Markopy - Python.h - Not found</title>
<para>Make sure you have the development version of python package, which includes the required header files. Check if header files exist: <computeroutput>/usr/include/python*</computeroutput></para>
<para>If it doesn&apos;t, run <computeroutput>sudo apt-get install python3-dev</computeroutput></para>
</sect3>
<sect3 id="index_1autotoc_md25">
<title>Markopy/MarkovPasswords - *.so not found, or other library related issues when building</title>
<para>Run <computeroutput>ls /usr/lib/x86_64-linux-gnu/ | grep boost</computeroutput> and check the shared object filenames. A common issue is that lboost is required but filenames are formatted as llibboost, or vice versa.</para>
<para>Do the same for python related library issues, run: <computeroutput>ls /usr/lib/x86_64-linux-gnu/ | grep python</computeroutput> to verify filename format is as required.</para>
<para>If not, you can modify the makefile, or create symlinks such as: <computeroutput>ln -s /usr/lib/x86_64-linux-gnu/libboost_python38.so /usr/lib/x86_64-linux-gnu/boost_python38.so</computeroutput></para>
</sect3>
</sect2>
<sect2 id="index_1autotoc_md26">
<title>Windows</title>
<sect3 id="index_1autotoc_md27">
<title>Boost - Bootstrap.bat &quot;ctype.h&quot; not found</title>
<para><itemizedlist>
<listitem><para>Make sure you are working in the &quot;Visual Studio Developer Command Prompt&quot; terminal.</para>
</listitem><listitem><para>Make sure you have Windows 10 SDK installed.</para>
</listitem><listitem><para>From VS developer terminal, run echo INCLUDE%. If result does not have the windows sdk folders, run the following before running bootstrap (change your sdk version instead of 10.0.19041.0): <programlisting filename=".bat"><codeline><highlight class="normal">set<sp/>INCLUDE=%INCLUDE%;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\NETFXSDK\4.8\include\um;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\10\include\10.0.19041.0\ucrt;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\10\include\10.0.19041.0\shared;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\10\include\10.0.19041.0\um;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\10\include\10.0.19041.0\winrt;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\10\include\10.0.19041.0\cppwinrt</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">set<sp/>LIB=%LIB%;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\10\lib\10.0.19041.0\ucrt\x64;C:\Program<sp/>Files<sp/>(x86)\Windows<sp/>Kits\10\lib\10.0.19041.0\um\x64</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</sect3>
<sect3 id="index_1autotoc_md28">
<title>Cannot open file &quot;*.lib&quot;</title>
<para>Make sure you have set the BOOST_ROOT environment variable correctly. Make sure you ran <computeroutput>b2</computeroutput> to build library files from boost sources.</para>
</sect3>
<sect3 id="index_1autotoc_md29">
<title>Python.h not found</title>
<para>Make sure you have python installed, and make sure you set PYTHON_PATH environment variable.</para>
<para><hruler/>
</para>
</sect3>
<sect3 id="index_1autotoc_md31">
<title>Simplified Theory</title>
<para><anchor id="index_1autotoc_md32"/><heading level="5">What is a markov model</heading>
</para>
<para>Below, is the example <ref refid="namespace_markov" kindref="compound">Markov</ref> Model which can generate strings with the alphabet &quot;a,b,c&quot;</para>
<para><image type="html" name="empty_model.png" inline="yes"></image>
</para>
<para><anchor id="index_1autotoc_md33"/><heading level="5">Iteration 1</heading>
</para>
<para>Below is a demonstration of how training will be done. For this example, we are going to adjust the model with string &quot;ab&quot;, and our occurrence will be &quot;3&quot; From <ref refid="class_markov_passwords" kindref="compound">MarkovPasswords</ref>, inside the train function, Model::adjust is called with &quot;ab&quot; and &quot;3&quot; parameters.</para>
<para>Now, Model::adjust will iteratively adjust the edge weights accordingly. It starts by adjusting weight between start and &quot;a&quot; node. This is done by calling Edge::adjust of the edge between the nodes.</para>
<para><image type="html" name="model_1.png" inline="yes"></image>
</para>
<para>After adjustment, ajust function iterates to the next character, &quot;b&quot;, and does the same thing.</para>
<para><image type="html" name="model_2.png" inline="yes"></image>
</para>
<para>As this string is finished, it will adjust the final weight, b-&gt;&quot;end&quot;</para>
<para><image type="html" name="model_3.png" inline="yes"></image>
</para>
<para><anchor id="index_1autotoc_md34"/><heading level="5">Iteration 2</heading>
</para>
<para>This time, same procedure will be applied for &quot;bacb&quot; string, with occurrence value of 12.</para>
<para><image type="html" name="model_21.png" inline="yes"></image>
</para>
<para><image type="html" name="model_22.png" inline="yes"></image>
</para>
<para><image type="html" name="model_23.png" inline="yes"></image>
</para>
<para><image type="html" name="model_24.png" inline="yes"></image>
</para>
<para><image type="html" name="model_25.png" inline="yes"></image>
</para>
<para><anchor id="index_1autotoc_md35"/><heading level="5">Iteration 38271</heading>
</para>
<para>As the model is trained, hidden linguistical patterns start to appear, and our model looks like this <image type="html" name="model_30.png" inline="yes"></image>
</para>
<para>With our dataset, without doing any kind of linugistic analysis ourselves, our <ref refid="namespace_markov" kindref="compound">Markov</ref> Model has highlighted that strings are more likely to start with a, b tends to follow a, and a is likely to be repeated in the string. <image type="html" name="model_31.png" inline="yes"></image>
</para>
<para><hruler/>
</para>
</sect3>
</sect2>
<sect2 id="index_1autotoc_md37">
<title>Contributing</title>
<para>Feel free to contribute.</para>
</sect2>
<sect2 id="index_1autotoc_md38">
<title>Contact</title>
<para>Twitter - <ulink url="https://twitter.com/ahakcil">@ahakcil</ulink> </para>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
