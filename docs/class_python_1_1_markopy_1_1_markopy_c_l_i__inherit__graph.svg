<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Python.Markopy.MarkopyCLI Pages: 1 -->
<!--zoomable 2115 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 859;
var viewHeight = 2115;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Python.Markopy.MarkopyCLI</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Top level model selector for Markopy CLI.">
<polygon fill="#bfbfbf" stroke="black" points="131.5,-152.5 131.5,-345.5 317.5,-345.5 317.5,-152.5 131.5,-152.5"/>
<text text-anchor="middle" x="224.5" y="-331.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkopyCLI</text>
<polyline fill="none" stroke="black" points="131.5,-324.5 317.5,-324.5 "/>
<text text-anchor="start" x="139.5" y="-310.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="139.5" y="-297.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="131.5,-290.5 317.5,-290.5 "/>
<text text-anchor="start" x="139.5" y="-276.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="139.5" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00"> add_help=False)</text>
<text text-anchor="start" x="139.5" y="-250.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="139.5" y="-237.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="139.5" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="139.5" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="139.5" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="139.5" y="-185.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
<text text-anchor="start" x="139.5" y="-172.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="139.5" y="-159.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def stub(self)</text>
</a>
</g>
</g>
<!-- Node12 -->
<g id="node12" class="node">
<title>Node12</title>
<g id="a_node12"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_markopy_c_l_i.html" target="_top" xlink:title="CUDA extension to MarkopyCLI.">
<polygon fill="none" stroke="black" points="100.5,-0.5 100.5,-115.5 348.5,-115.5 348.5,-0.5 100.5,-0.5"/>
<text text-anchor="middle" x="224.5" y="-101.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaMarkopyCLI</text>
<polyline fill="none" stroke="black" points="100.5,-94.5 348.5,-94.5 "/>
<text text-anchor="start" x="108.5" y="-80.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="108.5" y="-67.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="100.5,-60.5 348.5,-60.5 "/>
<text text-anchor="start" x="108.5" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ None __init__(self)</text>
<text text-anchor="start" x="108.5" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="108.5" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="108.5" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node12 -->
<g id="edge15" class="edge">
<title>Node1&#45;&gt;Node12</title>
<path fill="none" stroke="midnightblue" d="M224.5,-142.13C224.5,-133.07 224.5,-124.16 224.5,-115.72"/>
<polygon fill="none" stroke="midnightblue" points="221,-142.39 224.5,-152.39 228,-142.39 221,-142.39"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_python_1_1_markopy_1_1_base_c_l_i.html" target="_top" xlink:title="Base CLI class to handle user interactions">
<polygon fill="none" stroke="black" points="0,-1241.5 0,-1707.5 205,-1707.5 205,-1241.5 0,-1241.5"/>
<text text-anchor="middle" x="102.5" y="-1693.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.BaseCLI</text>
<polyline fill="none" stroke="black" points="0,-1686.5 205,-1686.5 "/>
<text text-anchor="start" x="8" y="-1672.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ parser</text>
<text text-anchor="start" x="8" y="-1659.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ print_help</text>
<text text-anchor="start" x="8" y="-1646.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="8" y="-1633.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<polyline fill="none" stroke="black" points="0,-1626.5 205,-1626.5 "/>
<text text-anchor="start" x="8" y="-1612.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="8" y="-1599.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="8" y="-1586.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="8" y="-1573.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="8" y="-1560.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="8" y="-1547.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="8" y="-1534.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="8" y="-1521.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_arguments</text>
<text text-anchor="start" x="8" y="-1508.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="8" y="-1495.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def import_model(self,</text>
<text text-anchor="start" x="8" y="-1482.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str filename)</text>
<text text-anchor="start" x="8" y="-1469.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def train(self, str</text>
<text text-anchor="start" x="8" y="-1456.9" font-family="Helvetica,sans-Serif" font-size="12.00"> dataset, str seperator,</text>
<text text-anchor="start" x="8" y="-1443.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str output, bool output</text>
<text text-anchor="start" x="8" y="-1430.9" font-family="Helvetica,sans-Serif" font-size="12.00">_forced=False, bool bulk=False)</text>
<text text-anchor="start" x="8" y="-1417.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def export(self, str</text>
<text text-anchor="start" x="8" y="-1404.9" font-family="Helvetica,sans-Serif" font-size="12.00"> filename)</text>
<text text-anchor="start" x="8" y="-1391.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def generate(self,</text>
<text text-anchor="start" x="8" y="-1378.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, bool</text>
<text text-anchor="start" x="8" y="-1365.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bulk=False)</text>
<text text-anchor="start" x="8" y="-1352.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="8" y="-1339.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_import_path</text>
<text text-anchor="start" x="8" y="-1326.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="8" y="-1313.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_corpus_path</text>
<text text-anchor="start" x="8" y="-1300.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="8" y="-1287.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_export_path</text>
<text text-anchor="start" x="8" y="-1274.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="8" y="-1261.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="8" y="-1248.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M46.34,-1231.36C5.54,-1002.31 -23.96,-654.06 95.5,-382 104.13,-362.34 117.08,-343.93 131.5,-327.46"/>
<polygon fill="none" stroke="midnightblue" points="42.95,-1232.28 48.17,-1241.5 49.84,-1231.04 42.95,-1232.28"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="class_python_1_1_markopy_1_1_abstract_generation_model_c_l_i.html" target="_top" xlink:title="abstract class for generation capable models">
<polygon fill="none" stroke="black" points="131,-914 131,-990 364,-990 364,-914 131,-914"/>
<text text-anchor="start" x="139" y="-976.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractGeneration</text>
<text text-anchor="middle" x="247.5" y="-963.4" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="131,-956 364,-956 "/>
<text text-anchor="middle" x="247.5" y="-942.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="131,-935 364,-935 "/>
<text text-anchor="start" x="139" y="-921.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node2&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M169.92,-1231.5C195.96,-1138 222.89,-1041.35 237.16,-990.13"/>
<polygon fill="none" stroke="midnightblue" points="166.47,-1230.84 167.15,-1241.41 173.21,-1232.72 166.47,-1230.84"/>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="class_python_1_1_markopy_1_1_abstract_training_model_c_l_i.html" target="_top" xlink:title="abstract class for training capable models">
<polygon fill="none" stroke="black" points="118.5,-580 118.5,-656 330.5,-656 330.5,-580 118.5,-580"/>
<text text-anchor="start" x="126.5" y="-642.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractTraining</text>
<text text-anchor="middle" x="224.5" y="-629.4" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="118.5,-622 330.5,-622 "/>
<text text-anchor="middle" x="224.5" y="-608.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="118.5,-601 330.5,-601 "/>
<text text-anchor="start" x="126.5" y="-587.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node10 -->
<g id="edge12" class="edge">
<title>Node2&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M86.18,-1231.2C77.33,-1039.29 76.06,-789.02 121.5,-699 130.02,-682.12 143.94,-667.74 158.83,-656.03"/>
<polygon fill="none" stroke="midnightblue" points="82.7,-1231.62 86.67,-1241.45 89.69,-1231.29 82.7,-1231.62"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::ModelMatrix.">
<polygon fill="none" stroke="black" points="362.5,-382.5 362.5,-536.5 570.5,-536.5 570.5,-382.5 362.5,-382.5"/>
<text text-anchor="middle" x="466.5" y="-522.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrixCLI</text>
<polyline fill="none" stroke="black" points="362.5,-515.5 570.5,-515.5 "/>
<text text-anchor="start" x="370.5" y="-501.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="370.5" y="-488.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ fileIO</text>
<polyline fill="none" stroke="black" points="362.5,-481.5 570.5,-481.5 "/>
<text text-anchor="start" x="370.5" y="-467.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="370.5" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="370.5" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="370.5" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="370.5" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="370.5" y="-402.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="370.5" y="-389.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M370.19,-375.52C352.84,-360.58 334.79,-345.02 317.54,-330.16"/>
<polygon fill="none" stroke="midnightblue" points="368.24,-378.47 378.11,-382.34 372.81,-373.16 368.24,-378.47"/>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M268.32,-904.36C306.17,-819.59 386.58,-639.5 432.49,-536.67"/>
<polygon fill="none" stroke="midnightblue" points="265.02,-903.17 264.14,-913.73 271.41,-906.03 265.02,-903.17"/>
</g>
<!-- Node4&#45;&gt;Node10 -->
<g id="edge11" class="edge">
<title>Node4&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M244.22,-903.66C239.6,-836.97 231.27,-716.77 227.07,-656.13"/>
<polygon fill="none" stroke="midnightblue" points="240.75,-904.15 244.93,-913.88 247.73,-903.66 240.75,-904.15"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix.html" target="_top" xlink:title="Abstract representation of a matrix based model.">
<polygon fill="none" stroke="black" points="569,-573.5 569,-662.5 758,-662.5 758,-573.5 569,-573.5"/>
<text text-anchor="middle" x="663.5" y="-648.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrix</text>
<polyline fill="none" stroke="black" points="569,-641.5 758,-641.5 "/>
<text text-anchor="middle" x="663.5" y="-627.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="569,-620.5 758,-620.5 "/>
<text text-anchor="start" x="577" y="-606.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def FastRandomWalk</text>
<text text-anchor="start" x="577" y="-593.9" font-family="Helvetica,sans-Serif" font-size="12.00">(int count, str wordlist,</text>
<text text-anchor="start" x="577" y="-580.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minlen, int maxlen)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node3 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M600.69,-567.1C588.41,-557.35 575.27,-546.91 562.2,-536.53"/>
<polygon fill="none" stroke="midnightblue" points="598.62,-569.93 608.62,-573.41 602.97,-564.45 598.62,-569.93"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="class_markov_1_1_a_p_i_1_1_model_matrix.html" target="_top" xlink:title="Class to flatten and reduce Markov::Model to a Matrix.">
<polygon fill="none" stroke="black" points="596.5,-699.5 596.5,-1204.5 850.5,-1204.5 850.5,-699.5 596.5,-699.5"/>
<text text-anchor="middle" x="723.5" y="-1190.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::ModelMatrix</text>
<polyline fill="none" stroke="black" points="596.5,-1183.5 850.5,-1183.5 "/>
<text text-anchor="start" x="604.5" y="-1169.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char ** edgeMatrix</text>
<text text-anchor="start" x="604.5" y="-1156.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int ** valueMatrix</text>
<text text-anchor="start" x="604.5" y="-1143.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int matrixSize</text>
<text text-anchor="start" x="604.5" y="-1130.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char * matrixIndex</text>
<text text-anchor="start" x="604.5" y="-1117.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int * totalEdgeWeights</text>
<text text-anchor="start" x="604.5" y="-1104.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool ready</text>
<polyline fill="none" stroke="black" points="596.5,-1097.5 850.5,-1097.5 "/>
<text text-anchor="start" x="604.5" y="-1083.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ModelMatrix()</text>
<text text-anchor="start" x="604.5" y="-1070.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool ConstructMatrix()</text>
<text text-anchor="start" x="604.5" y="-1057.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void DumpJSON()</text>
<text text-anchor="start" x="604.5" y="-1044.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ int FastRandomWalk</text>
<text text-anchor="start" x="604.5" y="-1031.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="604.5" y="-1018.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *wordlistFileName,</text>
<text text-anchor="start" x="604.5" y="-1005.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="604.5" y="-992.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool bFileIO=true)</text>
<text text-anchor="start" x="604.5" y="-979.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Import(const char</text>
<text text-anchor="start" x="604.5" y="-966.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="604.5" y="-953.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="604.5" y="-940.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="604.5" y="-927.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="604.5" y="-914.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int FastRandomWalk</text>
<text text-anchor="start" x="604.5" y="-901.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="604.5" y="-888.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::ofstream *wordlist,</text>
<text text-anchor="start" x="604.5" y="-875.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="604.5" y="-862.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool</text>
<text text-anchor="start" x="604.5" y="-849.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO=true)</text>
<text text-anchor="start" x="604.5" y="-836.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkPartition</text>
<text text-anchor="start" x="604.5" y="-823.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std::</text>
<text text-anchor="start" x="604.5" y="-810.9" font-family="Helvetica,sans-Serif" font-size="12.00">ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="604.5" y="-797.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="604.5" y="-784.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, bool bFileIO, int threads)</text>
<text text-anchor="start" x="604.5" y="-771.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkThread</text>
<text text-anchor="start" x="604.5" y="-758.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std</text>
<text text-anchor="start" x="604.5" y="-745.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="604.5" y="-732.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="604.5" y="-719.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, int id, bool bFileIO)</text>
<text text-anchor="start" x="604.5" y="-706.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool DeallocateMatrix()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M676.19,-689.23C674.47,-679.71 672.87,-670.83 671.42,-662.81"/>
<polygon fill="none" stroke="midnightblue" points="672.8,-690.15 678.02,-699.37 679.69,-688.9 672.8,-690.15"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="class_markov_1_1_a_p_i_1_1_markov_passwords.html" target="_top" xlink:title="Markov::Model with char represented nodes.">
<polygon fill="none" stroke="black" points="454,-1254.5 454,-1694.5 749,-1694.5 749,-1254.5 454,-1254.5"/>
<text text-anchor="middle" x="601.5" y="-1680.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::MarkovPasswords</text>
<polyline fill="none" stroke="black" points="454,-1673.5 749,-1673.5 "/>
<text text-anchor="start" x="462" y="-1659.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ifstream * datasetFile</text>
<text text-anchor="start" x="462" y="-1646.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * modelSavefile</text>
<text text-anchor="start" x="462" y="-1633.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * outputFile</text>
<polyline fill="none" stroke="black" points="454,-1626.5 749,-1626.5 "/>
<text text-anchor="start" x="462" y="-1612.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords()</text>
<text text-anchor="start" x="462" y="-1599.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords(const</text>
<text text-anchor="start" x="462" y="-1586.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *filename)</text>
<text text-anchor="start" x="462" y="-1573.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ifstream * OpenDataset</text>
<text text-anchor="start" x="462" y="-1560.9" font-family="Helvetica,sans-Serif" font-size="12.00">File(const char *filename)</text>
<text text-anchor="start" x="462" y="-1547.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="462" y="-1534.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="462" y="-1521.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="462" y="-1508.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ofstream * Save</text>
<text text-anchor="start" x="462" y="-1495.9" font-family="Helvetica,sans-Serif" font-size="12.00">(const char *filename)</text>
<text text-anchor="start" x="462" y="-1482.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Generate(unsigned</text>
<text text-anchor="start" x="462" y="-1469.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, const char</text>
<text text-anchor="start" x="462" y="-1456.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *wordlistFileName, int</text>
<text text-anchor="start" x="462" y="-1443.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen=6, int maxLen=12,</text>
<text text-anchor="start" x="462" y="-1430.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int threads=20)</text>
<text text-anchor="start" x="462" y="-1417.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Buff(const char</text>
<text text-anchor="start" x="462" y="-1404.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *str, double multiplier,</text>
<text text-anchor="start" x="462" y="-1391.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bDontAdjustSelfLoops</text>
<text text-anchor="start" x="462" y="-1378.9" font-family="Helvetica,sans-Serif" font-size="12.00">=true, bool bDontAdjustExtendedLoops=false)</text>
<text text-anchor="start" x="462" y="-1365.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void TrainThread(Markov</text>
<text text-anchor="start" x="462" y="-1352.9" font-family="Helvetica,sans-Serif" font-size="12.00">::API::Concurrency::ThreadShared</text>
<text text-anchor="start" x="462" y="-1339.9" font-family="Helvetica,sans-Serif" font-size="12.00">ListHandler *listhandler, char</text>
<text text-anchor="start" x="462" y="-1326.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter)</text>
<text text-anchor="start" x="462" y="-1313.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void GenerateThread</text>
<text text-anchor="start" x="462" y="-1300.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *outputLock,</text>
<text text-anchor="start" x="462" y="-1287.9" font-family="Helvetica,sans-Serif" font-size="12.00"> unsigned long int n, std</text>
<text text-anchor="start" x="462" y="-1274.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, int</text>
<text text-anchor="start" x="462" y="-1261.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M655.23,-1244.26C658.31,-1231.13 661.41,-1217.9 664.51,-1204.69"/>
<polygon fill="none" stroke="midnightblue" points="651.76,-1243.73 652.89,-1254.27 658.58,-1245.33 651.76,-1243.73"/>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="class_python_1_1_markopy_1_1_markov_model.html" target="_top" xlink:title="Abstract representation of a markov model.">
<polygon fill="none" stroke="black" points="382.5,-881.5 382.5,-1022.5 578.5,-1022.5 578.5,-881.5 382.5,-881.5"/>
<text text-anchor="middle" x="480.5" y="-1008.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovModel</text>
<polyline fill="none" stroke="black" points="382.5,-1001.5 578.5,-1001.5 "/>
<text text-anchor="middle" x="480.5" y="-987.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="382.5,-980.5 578.5,-980.5 "/>
<text text-anchor="start" x="390.5" y="-966.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Import(str filename)</text>
<text text-anchor="start" x="390.5" y="-953.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Export(str filename)</text>
<text text-anchor="start" x="390.5" y="-940.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Train(str dataset,</text>
<text text-anchor="start" x="390.5" y="-927.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str seperator, int threads)</text>
<text text-anchor="start" x="390.5" y="-914.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Generate(int count,</text>
<text text-anchor="start" x="390.5" y="-901.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, int minlen,</text>
<text text-anchor="start" x="390.5" y="-888.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxlen, int threads)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node11 -->
<g id="edge14" class="edge">
<title>Node7&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M548.26,-1244.49C529.59,-1164.16 509.97,-1079.79 496.68,-1022.61"/>
<polygon fill="none" stroke="midnightblue" points="544.86,-1245.32 550.54,-1254.27 551.68,-1243.74 544.86,-1245.32"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="class_markov_1_1_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="495.5,-1744.5 495.5,-2106.5 707.5,-2106.5 707.5,-1744.5 495.5,-1744.5"/>
<text text-anchor="middle" x="601.5" y="-2092.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::Model&lt; char &gt;</text>
<polyline fill="none" stroke="black" points="495.5,-2085.5 707.5,-2085.5 "/>
<text text-anchor="start" x="503.5" y="-2071.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::map&lt; char, Node</text>
<text text-anchor="start" x="503.5" y="-2058.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; nodes</text>
<text text-anchor="start" x="503.5" y="-2045.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; Node&lt; char &gt; * starterNode</text>
<text text-anchor="start" x="503.5" y="-2032.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="503.5" y="-2019.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; edges</text>
<polyline fill="none" stroke="black" points="495.5,-2012.5 707.5,-2012.5 "/>
<text text-anchor="start" x="503.5" y="-1998.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Model()</text>
<text text-anchor="start" x="503.5" y="-1985.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ char * RandomWalk(Markov</text>
<text text-anchor="start" x="503.5" y="-1972.9" font-family="Helvetica,sans-Serif" font-size="12.00">::Random::RandomEngine</text>
<text text-anchor="start" x="503.5" y="-1959.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *randomEngine, int minSetting,</text>
<text text-anchor="start" x="503.5" y="-1946.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxSetting, char *buffer)</text>
<text text-anchor="start" x="503.5" y="-1933.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void AdjustEdge(const</text>
<text text-anchor="start" x="503.5" y="-1920.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *payload, long</text>
<text text-anchor="start" x="503.5" y="-1907.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int occurrence)</text>
<text text-anchor="start" x="503.5" y="-1894.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(std::ifstream *)</text>
<text text-anchor="start" x="503.5" y="-1881.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(const char</text>
<text text-anchor="start" x="503.5" y="-1868.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="503.5" y="-1855.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(std::ofstream *)</text>
<text text-anchor="start" x="503.5" y="-1842.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(const char</text>
<text text-anchor="start" x="503.5" y="-1829.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="503.5" y="-1816.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Node&lt; char &gt; * StarterNode()</text>
<text text-anchor="start" x="503.5" y="-1803.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="503.5" y="-1790.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; * Edges()</text>
<text text-anchor="start" x="503.5" y="-1777.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::map&lt; char, Node</text>
<text text-anchor="start" x="503.5" y="-1764.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; * Nodes()</text>
<text text-anchor="start" x="503.5" y="-1751.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void OptimizeEdgeOrder()</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge8" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M601.5,-1734.08C601.5,-1721.08 601.5,-1707.93 601.5,-1694.81"/>
<polygon fill="none" stroke="midnightblue" points="598,-1734.46 601.5,-1744.46 605,-1734.46 598,-1734.46"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="class_python_1_1_markopy_1_1_markov_passwords_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::MarkovPasswords.">
<polygon fill="none" stroke="black" points="105,-408.5 105,-510.5 344,-510.5 344,-408.5 105,-408.5"/>
<text text-anchor="middle" x="224.5" y="-496.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovPasswordsCLI</text>
<polyline fill="none" stroke="black" points="105,-489.5 344,-489.5 "/>
<text text-anchor="start" x="113" y="-475.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<polyline fill="none" stroke="black" points="105,-468.5 344,-468.5 "/>
<text text-anchor="start" x="113" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="113" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="113" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="113" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00"> wordlist)</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node1 -->
<g id="edge9" class="edge">
<title>Node9&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M224.5,-397.87C224.5,-381.59 224.5,-363.58 224.5,-345.9"/>
<polygon fill="none" stroke="midnightblue" points="221,-398.29 224.5,-408.29 228,-398.29 221,-398.29"/>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge10" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M224.5,-569.85C224.5,-551.15 224.5,-529.63 224.5,-510.64"/>
<polygon fill="none" stroke="midnightblue" points="221,-569.91 224.5,-579.91 228,-569.91 221,-569.91"/>
</g>
<!-- Node11&#45;&gt;Node9 -->
<g id="edge13" class="edge">
<title>Node11&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M461.73,-871.26C440.48,-791.35 400.66,-667.03 339.5,-573 324.73,-550.29 304.64,-528.64 285.38,-510.5"/>
<polygon fill="none" stroke="midnightblue" points="458.43,-872.47 464.35,-881.26 465.2,-870.7 458.43,-872.47"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_python_1_1_markopy_1_1_markopy_c_l_i__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
