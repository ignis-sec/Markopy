<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Python.Markopy.AbstractTrainingModelCLI Pages: 1 -->
<svg width="304pt" height="701pt"
 viewBox="0.00 0.00 303.50 701.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 697)">
<title>Python.Markopy.AbstractTrainingModelCLI</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="abstract class for training capable models">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-76.5 212,-76.5 212,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-62.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractTraining</text>
<text text-anchor="middle" x="106" y="-49.9" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="0,-42.5 212,-42.5 "/>
<text text-anchor="middle" x="106" y="-28.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="0,-21.5 212,-21.5 "/>
<text text-anchor="start" x="8" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_python_1_1_markopy_1_1_abstract_generation_model_c_l_i.html" target="_top" xlink:title="abstract class for generation capable models">
<polygon fill="none" stroke="black" points="62.5,-113.5 62.5,-189.5 295.5,-189.5 295.5,-113.5 62.5,-113.5"/>
<text text-anchor="start" x="70.5" y="-175.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractGeneration</text>
<text text-anchor="middle" x="179" y="-162.9" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="62.5,-155.5 295.5,-155.5 "/>
<text text-anchor="middle" x="179" y="-141.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="62.5,-134.5 295.5,-134.5 "/>
<text text-anchor="start" x="70.5" y="-120.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M148.96,-104.82C142.84,-95.52 136.47,-85.83 130.57,-76.86"/>
<polygon fill="none" stroke="midnightblue" points="146.07,-106.8 154.49,-113.23 151.92,-102.95 146.07,-106.8"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_python_1_1_markopy_1_1_base_c_l_i.html" target="_top" xlink:title="Base CLI class to handle user interactions">
<polygon fill="none" stroke="black" points="3.5,-226.5 3.5,-692.5 208.5,-692.5 208.5,-226.5 3.5,-226.5"/>
<text text-anchor="middle" x="106" y="-678.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.BaseCLI</text>
<polyline fill="none" stroke="black" points="3.5,-671.5 208.5,-671.5 "/>
<text text-anchor="start" x="11.5" y="-657.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ parser</text>
<text text-anchor="start" x="11.5" y="-644.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ print_help</text>
<text text-anchor="start" x="11.5" y="-631.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="11.5" y="-618.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<polyline fill="none" stroke="black" points="3.5,-611.5 208.5,-611.5 "/>
<text text-anchor="start" x="11.5" y="-597.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="11.5" y="-584.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="11.5" y="-571.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="11.5" y="-558.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="11.5" y="-545.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="11.5" y="-532.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="11.5" y="-519.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="11.5" y="-506.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_arguments</text>
<text text-anchor="start" x="11.5" y="-493.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="11.5" y="-480.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def import_model(self,</text>
<text text-anchor="start" x="11.5" y="-467.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str filename)</text>
<text text-anchor="start" x="11.5" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def train(self, str</text>
<text text-anchor="start" x="11.5" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00"> dataset, str seperator,</text>
<text text-anchor="start" x="11.5" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str output, bool output</text>
<text text-anchor="start" x="11.5" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00">_forced=False, bool bulk=False)</text>
<text text-anchor="start" x="11.5" y="-402.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def export(self, str</text>
<text text-anchor="start" x="11.5" y="-389.9" font-family="Helvetica,sans-Serif" font-size="12.00"> filename)</text>
<text text-anchor="start" x="11.5" y="-376.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def generate(self,</text>
<text text-anchor="start" x="11.5" y="-363.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, bool</text>
<text text-anchor="start" x="11.5" y="-350.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bulk=False)</text>
<text text-anchor="start" x="11.5" y="-337.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="11.5" y="-324.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_import_path</text>
<text text-anchor="start" x="11.5" y="-311.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="11.5" y="-298.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_corpus_path</text>
<text text-anchor="start" x="11.5" y="-285.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="11.5" y="-272.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_export_path</text>
<text text-anchor="start" x="11.5" y="-259.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="11.5" y="-246.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="11.5" y="-233.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M41.57,-215.85C40.33,-180.93 43.59,-145.75 54,-113 58.07,-100.19 65.28,-87.69 73.05,-76.74"/>
<polygon fill="none" stroke="midnightblue" points="38.09,-216.37 42.07,-226.19 45.08,-216.03 38.09,-216.37"/>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M163.77,-216.32C166.07,-206.7 168.19,-197.79 170.08,-189.88"/>
<polygon fill="none" stroke="midnightblue" points="160.34,-215.64 161.42,-226.18 167.15,-217.27 160.34,-215.64"/>
</g>
</g>
</svg>
