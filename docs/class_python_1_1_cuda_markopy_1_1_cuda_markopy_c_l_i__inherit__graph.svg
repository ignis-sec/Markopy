<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Python.CudaMarkopy.CudaMarkopyCLI Pages: 1 -->
<!--zoomable 2622 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 1087;
var viewHeight = 2622;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Python.CudaMarkopy.CudaMarkopyCLI</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="CUDA extension to MarkopyCLI.">
<polygon fill="#bfbfbf" stroke="black" points="540,-0.5 540,-115.5 788,-115.5 788,-0.5 540,-0.5"/>
<text text-anchor="middle" x="664" y="-101.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaMarkopyCLI</text>
<polyline fill="none" stroke="black" points="540,-94.5 788,-94.5 "/>
<text text-anchor="start" x="548" y="-80.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="548" y="-67.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="540,-60.5 788,-60.5 "/>
<text text-anchor="start" x="548" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ None __init__(self)</text>
<text text-anchor="start" x="548" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="548" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="548" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_python_1_1_markopy_1_1_markopy_c_l_i.html" target="_top" xlink:title="Top level model selector for Markopy CLI.">
<polygon fill="none" stroke="black" points="725,-152.5 725,-345.5 911,-345.5 911,-152.5 725,-152.5"/>
<text text-anchor="middle" x="818" y="-331.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkopyCLI</text>
<polyline fill="none" stroke="black" points="725,-324.5 911,-324.5 "/>
<text text-anchor="start" x="733" y="-310.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="733" y="-297.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="725,-290.5 911,-290.5 "/>
<text text-anchor="start" x="733" y="-276.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="733" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00"> add_help=False)</text>
<text text-anchor="start" x="733" y="-250.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="733" y="-237.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="733" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="733" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="733" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="733" y="-185.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
<text text-anchor="start" x="733" y="-172.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="733" y="-159.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def stub(self)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M733.64,-144.47C725.61,-134.61 717.68,-124.88 710.22,-115.72"/>
<polygon fill="none" stroke="midnightblue" points="731.07,-146.85 740.1,-152.39 736.49,-142.43 731.07,-146.85"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_python_1_1_markopy_1_1_base_c_l_i.html" target="_top" xlink:title="Base CLI class to handle user interactions">
<polygon fill="none" stroke="black" points="873.5,-1748.5 873.5,-2214.5 1078.5,-2214.5 1078.5,-1748.5 873.5,-1748.5"/>
<text text-anchor="middle" x="976" y="-2200.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.BaseCLI</text>
<polyline fill="none" stroke="black" points="873.5,-2193.5 1078.5,-2193.5 "/>
<text text-anchor="start" x="881.5" y="-2179.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ parser</text>
<text text-anchor="start" x="881.5" y="-2166.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ print_help</text>
<text text-anchor="start" x="881.5" y="-2153.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="881.5" y="-2140.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<polyline fill="none" stroke="black" points="873.5,-2133.5 1078.5,-2133.5 "/>
<text text-anchor="start" x="881.5" y="-2119.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="881.5" y="-2106.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="881.5" y="-2093.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="881.5" y="-2080.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="881.5" y="-2067.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="881.5" y="-2054.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="881.5" y="-2041.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="881.5" y="-2028.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_arguments</text>
<text text-anchor="start" x="881.5" y="-2015.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="881.5" y="-2002.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def import_model(self,</text>
<text text-anchor="start" x="881.5" y="-1989.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str filename)</text>
<text text-anchor="start" x="881.5" y="-1976.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def train(self, str</text>
<text text-anchor="start" x="881.5" y="-1963.9" font-family="Helvetica,sans-Serif" font-size="12.00"> dataset, str seperator,</text>
<text text-anchor="start" x="881.5" y="-1950.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str output, bool output</text>
<text text-anchor="start" x="881.5" y="-1937.9" font-family="Helvetica,sans-Serif" font-size="12.00">_forced=False, bool bulk=False)</text>
<text text-anchor="start" x="881.5" y="-1924.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def export(self, str</text>
<text text-anchor="start" x="881.5" y="-1911.9" font-family="Helvetica,sans-Serif" font-size="12.00"> filename)</text>
<text text-anchor="start" x="881.5" y="-1898.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def generate(self,</text>
<text text-anchor="start" x="881.5" y="-1885.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, bool</text>
<text text-anchor="start" x="881.5" y="-1872.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bulk=False)</text>
<text text-anchor="start" x="881.5" y="-1859.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="881.5" y="-1846.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_import_path</text>
<text text-anchor="start" x="881.5" y="-1833.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="881.5" y="-1820.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_corpus_path</text>
<text text-anchor="start" x="881.5" y="-1807.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="881.5" y="-1794.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_export_path</text>
<text text-anchor="start" x="881.5" y="-1781.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="881.5" y="-1768.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="881.5" y="-1755.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M982.36,-1738.31C982.58,-1729.43 982.79,-1720.64 983,-1712 988.81,-1471.12 992.33,-1410.93 995,-1170 997.94,-904.68 996.39,-838.33 995,-573 994.56,-488.11 1031.26,-457.78 993,-382 975.25,-346.84 943.25,-318.53 911.42,-297.29"/>
<polygon fill="none" stroke="midnightblue" points="978.86,-1738.29 982.11,-1748.37 985.86,-1738.46 978.86,-1738.29"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="class_python_1_1_markopy_1_1_abstract_generation_model_c_l_i.html" target="_top" xlink:title="abstract class for generation capable models">
<polygon fill="none" stroke="black" points="500.5,-1421 500.5,-1497 733.5,-1497 733.5,-1421 500.5,-1421"/>
<text text-anchor="start" x="508.5" y="-1483.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractGeneration</text>
<text text-anchor="middle" x="617" y="-1470.4" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="500.5,-1463 733.5,-1463 "/>
<text text-anchor="middle" x="617" y="-1449.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="500.5,-1442 733.5,-1442 "/>
<text text-anchor="start" x="508.5" y="-1428.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node3&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M866.48,-1867.19C825.01,-1821.13 779.14,-1766.08 743,-1712 695.03,-1640.22 653.31,-1547.63 632.03,-1497.05"/>
<polygon fill="none" stroke="midnightblue" points="864.05,-1869.73 873.36,-1874.8 869.25,-1865.04 864.05,-1869.73"/>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="class_python_1_1_markopy_1_1_abstract_training_model_c_l_i.html" target="_top" xlink:title="abstract class for training capable models">
<polygon fill="none" stroke="black" points="774,-833.5 774,-909.5 986,-909.5 986,-833.5 774,-833.5"/>
<text text-anchor="start" x="782" y="-895.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractTraining</text>
<text text-anchor="middle" x="880" y="-882.9" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="774,-875.5 986,-875.5 "/>
<text text-anchor="middle" x="880" y="-861.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="774,-854.5 986,-854.5 "/>
<text text-anchor="start" x="782" y="-840.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node11 -->
<g id="edge13" class="edge">
<title>Node3&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M982.59,-1738.26C983.67,-1585.08 979.4,-1383.25 957,-1206 943.18,-1096.64 908.96,-970.66 891.16,-909.57"/>
<polygon fill="none" stroke="midnightblue" points="979.09,-1738.26 982.52,-1748.28 986.09,-1738.31 979.09,-1738.26"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::ModelMatrix.">
<polygon fill="none" stroke="black" points="518,-382.5 518,-536.5 726,-536.5 726,-382.5 518,-382.5"/>
<text text-anchor="middle" x="622" y="-522.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrixCLI</text>
<polyline fill="none" stroke="black" points="518,-515.5 726,-515.5 "/>
<text text-anchor="start" x="526" y="-501.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="526" y="-488.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ fileIO</text>
<polyline fill="none" stroke="black" points="518,-481.5 726,-481.5 "/>
<text text-anchor="start" x="526" y="-467.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="526" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="526" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="526" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="526" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="526" y="-402.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="526" y="-389.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M700.45,-375.05C709.47,-365.45 718.73,-355.6 727.9,-345.85"/>
<polygon fill="none" stroke="midnightblue" points="697.89,-372.66 693.59,-382.34 702.99,-377.45 697.89,-372.66"/>
</g>
<!-- Node13 -->
<g id="node13" class="node">
<title>Node13</title>
<g id="a_node13"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_model_matrix_c_l_i.html" target="_top" xlink:title="Python CLI wrapper for CudaModelMatrix.">
<polygon fill="none" stroke="black" points="449.5,-172 449.5,-326 662.5,-326 662.5,-172 449.5,-172"/>
<text text-anchor="start" x="457.5" y="-312.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaModel</text>
<text text-anchor="middle" x="556" y="-299.4" font-family="Helvetica,sans-Serif" font-size="12.00">MatrixCLI</text>
<polyline fill="none" stroke="black" points="449.5,-292 662.5,-292 "/>
<text text-anchor="start" x="457.5" y="-278.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="457.5" y="-265.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ bInfinite</text>
<polyline fill="none" stroke="black" points="449.5,-258 662.5,-258 "/>
<text text-anchor="start" x="457.5" y="-244.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self)</text>
<text text-anchor="start" x="457.5" y="-231.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="457.5" y="-218.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="457.5" y="-205.4" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="457.5" y="-192.4" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="457.5" y="-179.4" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node13 -->
<g id="edge17" class="edge">
<title>Node4&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M594.74,-372.39C589.9,-357.11 584.9,-341.29 580.15,-326.3"/>
<polygon fill="none" stroke="midnightblue" points="591.54,-373.86 597.89,-382.34 598.21,-371.75 591.54,-373.86"/>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M617.24,-1410.27C618.04,-1250.43 620.63,-732.99 621.62,-536.84"/>
<polygon fill="none" stroke="midnightblue" points="613.74,-1410.7 617.19,-1420.72 620.74,-1410.74 613.74,-1410.7"/>
</g>
<!-- Node5&#45;&gt;Node11 -->
<g id="edge12" class="edge">
<title>Node5&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M637.88,-1411.52C688.53,-1298.75 817.16,-1012.39 863.25,-909.78"/>
<polygon fill="none" stroke="midnightblue" points="634.56,-1410.37 633.65,-1420.93 640.94,-1413.24 634.56,-1410.37"/>
</g>
<!-- Node5&#45;&gt;Node13 -->
<g id="edge18" class="edge">
<title>Node5&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M609.49,-1410.81C588.36,-1275.34 528.66,-873.38 509,-537 504.98,-468.23 497.28,-449.88 509,-382 512.19,-363.54 517.71,-344.25 523.87,-326.29"/>
<polygon fill="none" stroke="midnightblue" points="606.06,-1411.51 611.06,-1420.85 612.97,-1410.43 606.06,-1411.51"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix.html" target="_top" xlink:title="Abstract representation of a matrix based model.">
<polygon fill="none" stroke="black" points="272.5,-827 272.5,-916 461.5,-916 461.5,-827 272.5,-827"/>
<text text-anchor="middle" x="367" y="-902.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrix</text>
<polyline fill="none" stroke="black" points="272.5,-895 461.5,-895 "/>
<text text-anchor="middle" x="367" y="-881.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="272.5,-874 461.5,-874 "/>
<text text-anchor="start" x="280.5" y="-860.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def FastRandomWalk</text>
<text text-anchor="start" x="280.5" y="-847.4" font-family="Helvetica,sans-Serif" font-size="12.00">(int count, str wordlist,</text>
<text text-anchor="start" x="280.5" y="-834.4" font-family="Helvetica,sans-Serif" font-size="12.00"> int minlen, int maxlen)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node4 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M399.79,-817.78C444.19,-746.4 523.71,-618.54 574.61,-536.7"/>
<polygon fill="none" stroke="midnightblue" points="396.6,-816.28 394.29,-826.62 402.54,-819.98 396.6,-816.28"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="class_markov_1_1_a_p_i_1_1_model_matrix.html" target="_top" xlink:title="Class to flatten and reduce Markov::Model to a Matrix.">
<polygon fill="none" stroke="black" points="228,-1206.5 228,-1711.5 482,-1711.5 482,-1206.5 228,-1206.5"/>
<text text-anchor="middle" x="355" y="-1697.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::ModelMatrix</text>
<polyline fill="none" stroke="black" points="228,-1690.5 482,-1690.5 "/>
<text text-anchor="start" x="236" y="-1676.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char ** edgeMatrix</text>
<text text-anchor="start" x="236" y="-1663.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int ** valueMatrix</text>
<text text-anchor="start" x="236" y="-1650.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int matrixSize</text>
<text text-anchor="start" x="236" y="-1637.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char * matrixIndex</text>
<text text-anchor="start" x="236" y="-1624.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int * totalEdgeWeights</text>
<text text-anchor="start" x="236" y="-1611.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool ready</text>
<polyline fill="none" stroke="black" points="228,-1604.5 482,-1604.5 "/>
<text text-anchor="start" x="236" y="-1590.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ModelMatrix()</text>
<text text-anchor="start" x="236" y="-1577.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool ConstructMatrix()</text>
<text text-anchor="start" x="236" y="-1564.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void DumpJSON()</text>
<text text-anchor="start" x="236" y="-1551.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ int FastRandomWalk</text>
<text text-anchor="start" x="236" y="-1538.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="236" y="-1525.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *wordlistFileName,</text>
<text text-anchor="start" x="236" y="-1512.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="236" y="-1499.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool bFileIO=true)</text>
<text text-anchor="start" x="236" y="-1486.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Import(const char</text>
<text text-anchor="start" x="236" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="236" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="236" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="236" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="236" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int FastRandomWalk</text>
<text text-anchor="start" x="236" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="236" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::ofstream *wordlist,</text>
<text text-anchor="start" x="236" y="-1382.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="236" y="-1369.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool</text>
<text text-anchor="start" x="236" y="-1356.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO=true)</text>
<text text-anchor="start" x="236" y="-1343.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkPartition</text>
<text text-anchor="start" x="236" y="-1330.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std::</text>
<text text-anchor="start" x="236" y="-1317.9" font-family="Helvetica,sans-Serif" font-size="12.00">ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="236" y="-1304.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="236" y="-1291.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, bool bFileIO, int threads)</text>
<text text-anchor="start" x="236" y="-1278.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkThread</text>
<text text-anchor="start" x="236" y="-1265.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std</text>
<text text-anchor="start" x="236" y="-1252.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="236" y="-1239.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="236" y="-1226.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, int id, bool bFileIO)</text>
<text text-anchor="start" x="236" y="-1213.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool DeallocateMatrix()</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M360.36,-1196.27C362.56,-1089.01 364.88,-976.14 366.11,-916.11"/>
<polygon fill="none" stroke="midnightblue" points="356.86,-1196.23 360.16,-1206.3 363.86,-1196.37 356.86,-1196.23"/>
</g>
<!-- Node14 -->
<g id="node14" class="node">
<title>Node14</title>
<g id="a_node14"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_c_u_d_a_model_matrix.html" target="_top" xlink:title="Extension of Markov::API::ModelMatrix which is modified to run on GPU devices.">
<polygon fill="none" stroke="black" points="0,-573.5 0,-1169.5 254,-1169.5 254,-573.5 0,-573.5"/>
<text text-anchor="start" x="8" y="-1155.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="127" y="-1142.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDAModelMatrix</text>
<polyline fill="none" stroke="black" points="0,-1135.5 254,-1135.5 "/>
<text text-anchor="start" x="8" y="-1121.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_edgeMatrix</text>
<text text-anchor="start" x="8" y="-1108.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_valueMatrix</text>
<text text-anchor="start" x="8" y="-1095.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_matrixIndex</text>
<text text-anchor="start" x="8" y="-1082.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_totalEdge</text>
<text text-anchor="start" x="8" y="-1069.9" font-family="Helvetica,sans-Serif" font-size="12.00">Weights</text>
<text text-anchor="start" x="8" y="-1056.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** device_outputBuffer</text>
<text text-anchor="start" x="8" y="-1043.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** outputBuffer</text>
<text text-anchor="start" x="8" y="-1030.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * flatEdgeMatrix</text>
<text text-anchor="start" x="8" y="-1017.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * flatValueMatrix</text>
<text text-anchor="start" x="8" y="-1004.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaBlocks</text>
<text text-anchor="start" x="8" y="-991.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaThreads</text>
<text text-anchor="start" x="8" y="-978.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int iterationsPerKernelThread</text>
<text text-anchor="start" x="8" y="-965.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerSync</text>
<text text-anchor="start" x="8" y="-952.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerKernel</text>
<text text-anchor="start" x="8" y="-939.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int numberOfPartitions</text>
<text text-anchor="start" x="8" y="-926.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaGridSize</text>
<text text-anchor="start" x="8" y="-913.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaMemPerGrid</text>
<text text-anchor="start" x="8" y="-900.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int cudaPerKernelAllocationSize</text>
<text text-anchor="start" x="8" y="-887.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int alternatingKernels</text>
<text text-anchor="start" x="8" y="-874.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; unsigned long ** device</text>
<text text-anchor="start" x="8" y="-861.9" font-family="Helvetica,sans-Serif" font-size="12.00">_seeds</text>
<text text-anchor="start" x="8" y="-848.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; cudaStream_t * cudastreams</text>
<polyline fill="none" stroke="black" points="0,-841.5 254,-841.5 "/>
<text text-anchor="start" x="8" y="-827.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void MigrateMatrix()</text>
<text text-anchor="start" x="8" y="-814.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FlattenMatrix()</text>
<text text-anchor="start" x="8" y="-801.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FastRandom</text>
<text text-anchor="start" x="8" y="-788.9" font-family="Helvetica,sans-Serif" font-size="12.00">Walk(unsigned long int</text>
<text text-anchor="start" x="8" y="-775.9" font-family="Helvetica,sans-Serif" font-size="12.00"> n, const char *wordlistFileName,</text>
<text text-anchor="start" x="8" y="-762.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen, int maxLen, bool</text>
<text text-anchor="start" x="8" y="-749.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO, bool bInfinite)</text>
<text text-anchor="start" x="8" y="-736.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ char * AllocVRAMOutput</text>
<text text-anchor="start" x="8" y="-723.9" font-family="Helvetica,sans-Serif" font-size="12.00">Buffer(long int n, long int</text>
<text text-anchor="start" x="8" y="-710.9" font-family="Helvetica,sans-Serif" font-size="12.00"> singleGenMaxLen, long int CUDAKernel</text>
<text text-anchor="start" x="8" y="-697.9" font-family="Helvetica,sans-Serif" font-size="12.00">GridSize, long int sizePerGrid)</text>
<text text-anchor="start" x="8" y="-684.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void LaunchAsync</text>
<text text-anchor="start" x="8" y="-671.9" font-family="Helvetica,sans-Serif" font-size="12.00">Kernel(int kernelID, int</text>
<text text-anchor="start" x="8" y="-658.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
<text text-anchor="start" x="8" y="-645.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void prepKernel</text>
<text text-anchor="start" x="8" y="-632.9" font-family="Helvetica,sans-Serif" font-size="12.00">MemoryChannel(int numberOfStreams)</text>
<text text-anchor="start" x="8" y="-619.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void GatherAsync</text>
<text text-anchor="start" x="8" y="-606.9" font-family="Helvetica,sans-Serif" font-size="12.00">KernelOutput(int kernelID,</text>
<text text-anchor="start" x="8" y="-593.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bFileIO, std::ofstream</text>
<text text-anchor="start" x="8" y="-580.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &amp;wordlist)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node14 -->
<g id="edge20" class="edge">
<title>Node7&#45;&gt;Node14</title>
<path fill="none" stroke="midnightblue" d="M253.34,-1196.93C249.83,-1187.93 246.31,-1178.88 242.78,-1169.83"/>
<polygon fill="none" stroke="midnightblue" points="250.09,-1198.25 256.98,-1206.3 256.62,-1195.71 250.09,-1198.25"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="class_markov_1_1_a_p_i_1_1_markov_passwords.html" target="_top" xlink:title="Markov::Model with char represented nodes.">
<polygon fill="none" stroke="black" points="384.5,-1761.5 384.5,-2201.5 679.5,-2201.5 679.5,-1761.5 384.5,-1761.5"/>
<text text-anchor="middle" x="532" y="-2187.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::MarkovPasswords</text>
<polyline fill="none" stroke="black" points="384.5,-2180.5 679.5,-2180.5 "/>
<text text-anchor="start" x="392.5" y="-2166.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ifstream * datasetFile</text>
<text text-anchor="start" x="392.5" y="-2153.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * modelSavefile</text>
<text text-anchor="start" x="392.5" y="-2140.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * outputFile</text>
<polyline fill="none" stroke="black" points="384.5,-2133.5 679.5,-2133.5 "/>
<text text-anchor="start" x="392.5" y="-2119.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords()</text>
<text text-anchor="start" x="392.5" y="-2106.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords(const</text>
<text text-anchor="start" x="392.5" y="-2093.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *filename)</text>
<text text-anchor="start" x="392.5" y="-2080.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ifstream * OpenDataset</text>
<text text-anchor="start" x="392.5" y="-2067.9" font-family="Helvetica,sans-Serif" font-size="12.00">File(const char *filename)</text>
<text text-anchor="start" x="392.5" y="-2054.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="392.5" y="-2041.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="392.5" y="-2028.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="392.5" y="-2015.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ofstream * Save</text>
<text text-anchor="start" x="392.5" y="-2002.9" font-family="Helvetica,sans-Serif" font-size="12.00">(const char *filename)</text>
<text text-anchor="start" x="392.5" y="-1989.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Generate(unsigned</text>
<text text-anchor="start" x="392.5" y="-1976.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, const char</text>
<text text-anchor="start" x="392.5" y="-1963.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *wordlistFileName, int</text>
<text text-anchor="start" x="392.5" y="-1950.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen=6, int maxLen=12,</text>
<text text-anchor="start" x="392.5" y="-1937.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int threads=20)</text>
<text text-anchor="start" x="392.5" y="-1924.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Buff(const char</text>
<text text-anchor="start" x="392.5" y="-1911.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *str, double multiplier,</text>
<text text-anchor="start" x="392.5" y="-1898.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bDontAdjustSelfLoops</text>
<text text-anchor="start" x="392.5" y="-1885.9" font-family="Helvetica,sans-Serif" font-size="12.00">=true, bool bDontAdjustExtendedLoops=false)</text>
<text text-anchor="start" x="392.5" y="-1872.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void TrainThread(Markov</text>
<text text-anchor="start" x="392.5" y="-1859.9" font-family="Helvetica,sans-Serif" font-size="12.00">::API::Concurrency::ThreadShared</text>
<text text-anchor="start" x="392.5" y="-1846.9" font-family="Helvetica,sans-Serif" font-size="12.00">ListHandler *listhandler, char</text>
<text text-anchor="start" x="392.5" y="-1833.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter)</text>
<text text-anchor="start" x="392.5" y="-1820.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void GenerateThread</text>
<text text-anchor="start" x="392.5" y="-1807.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *outputLock,</text>
<text text-anchor="start" x="392.5" y="-1794.9" font-family="Helvetica,sans-Serif" font-size="12.00"> unsigned long int n, std</text>
<text text-anchor="start" x="392.5" y="-1781.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, int</text>
<text text-anchor="start" x="392.5" y="-1768.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge8" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M454.17,-1751.64C449.67,-1738.39 445.12,-1725.03 440.59,-1711.69"/>
<polygon fill="none" stroke="midnightblue" points="450.92,-1752.93 457.45,-1761.27 457.54,-1750.68 450.92,-1752.93"/>
</g>
<!-- Node12 -->
<g id="node12" class="node">
<title>Node12</title>
<g id="a_node12"><a xlink:href="class_python_1_1_markopy_1_1_markov_model.html" target="_top" xlink:title="Abstract representation of a markov model.">
<polygon fill="none" stroke="black" points="752,-1388.5 752,-1529.5 948,-1529.5 948,-1388.5 752,-1388.5"/>
<text text-anchor="middle" x="850" y="-1515.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovModel</text>
<polyline fill="none" stroke="black" points="752,-1508.5 948,-1508.5 "/>
<text text-anchor="middle" x="850" y="-1494.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="752,-1487.5 948,-1487.5 "/>
<text text-anchor="start" x="760" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Import(str filename)</text>
<text text-anchor="start" x="760" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Export(str filename)</text>
<text text-anchor="start" x="760" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Train(str dataset,</text>
<text text-anchor="start" x="760" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str seperator, int threads)</text>
<text text-anchor="start" x="760" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Generate(int count,</text>
<text text-anchor="start" x="760" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, int minlen,</text>
<text text-anchor="start" x="760" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxlen, int threads)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node12 -->
<g id="edge15" class="edge">
<title>Node8&#45;&gt;Node12</title>
<path fill="none" stroke="midnightblue" d="M685.73,-1797.9C706.21,-1769.95 725.98,-1740.8 743,-1712 777.58,-1653.49 806.92,-1581.71 826.08,-1529.75"/>
<polygon fill="none" stroke="midnightblue" points="682.77,-1796.01 679.65,-1806.14 688.4,-1800.17 682.77,-1796.01"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="class_markov_1_1_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="426,-2251.5 426,-2613.5 638,-2613.5 638,-2251.5 426,-2251.5"/>
<text text-anchor="middle" x="532" y="-2599.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::Model&lt; char &gt;</text>
<polyline fill="none" stroke="black" points="426,-2592.5 638,-2592.5 "/>
<text text-anchor="start" x="434" y="-2578.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::map&lt; char, Node</text>
<text text-anchor="start" x="434" y="-2565.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; nodes</text>
<text text-anchor="start" x="434" y="-2552.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; Node&lt; char &gt; * starterNode</text>
<text text-anchor="start" x="434" y="-2539.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="434" y="-2526.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; edges</text>
<polyline fill="none" stroke="black" points="426,-2519.5 638,-2519.5 "/>
<text text-anchor="start" x="434" y="-2505.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Model()</text>
<text text-anchor="start" x="434" y="-2492.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ char * RandomWalk(Markov</text>
<text text-anchor="start" x="434" y="-2479.9" font-family="Helvetica,sans-Serif" font-size="12.00">::Random::RandomEngine</text>
<text text-anchor="start" x="434" y="-2466.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *randomEngine, int minSetting,</text>
<text text-anchor="start" x="434" y="-2453.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxSetting, char *buffer)</text>
<text text-anchor="start" x="434" y="-2440.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void AdjustEdge(const</text>
<text text-anchor="start" x="434" y="-2427.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *payload, long</text>
<text text-anchor="start" x="434" y="-2414.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int occurrence)</text>
<text text-anchor="start" x="434" y="-2401.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(std::ifstream *)</text>
<text text-anchor="start" x="434" y="-2388.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(const char</text>
<text text-anchor="start" x="434" y="-2375.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="434" y="-2362.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(std::ofstream *)</text>
<text text-anchor="start" x="434" y="-2349.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(const char</text>
<text text-anchor="start" x="434" y="-2336.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="434" y="-2323.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Node&lt; char &gt; * StarterNode()</text>
<text text-anchor="start" x="434" y="-2310.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="434" y="-2297.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; * Edges()</text>
<text text-anchor="start" x="434" y="-2284.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::map&lt; char, Node</text>
<text text-anchor="start" x="434" y="-2271.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; * Nodes()</text>
<text text-anchor="start" x="434" y="-2258.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void OptimizeEdgeOrder()</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge9" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M532,-2241.08C532,-2228.08 532,-2214.93 532,-2201.81"/>
<polygon fill="none" stroke="midnightblue" points="528.5,-2241.46 532,-2251.46 535.5,-2241.46 528.5,-2241.46"/>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="class_python_1_1_markopy_1_1_markov_passwords_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::MarkovPasswords.">
<polygon fill="none" stroke="black" points="744.5,-408.5 744.5,-510.5 983.5,-510.5 983.5,-408.5 744.5,-408.5"/>
<text text-anchor="middle" x="864" y="-496.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovPasswordsCLI</text>
<polyline fill="none" stroke="black" points="744.5,-489.5 983.5,-489.5 "/>
<text text-anchor="start" x="752.5" y="-475.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<polyline fill="none" stroke="black" points="744.5,-468.5 983.5,-468.5 "/>
<text text-anchor="start" x="752.5" y="-454.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="752.5" y="-441.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="752.5" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="752.5" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00"> wordlist)</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node2 -->
<g id="edge10" class="edge">
<title>Node10&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M850.73,-398.33C847.11,-381.93 843.1,-363.75 839.16,-345.9"/>
<polygon fill="none" stroke="midnightblue" points="847.35,-399.28 852.92,-408.29 854.19,-397.77 847.35,-399.28"/>
</g>
<!-- Node11&#45;&gt;Node10 -->
<g id="edge11" class="edge">
<title>Node11&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M878.16,-823.38C875.12,-745.51 869.08,-590.65 865.96,-510.76"/>
<polygon fill="none" stroke="midnightblue" points="874.66,-823.54 878.55,-833.39 881.66,-823.26 874.66,-823.54"/>
</g>
<!-- Node12&#45;&gt;Node10 -->
<g id="edge14" class="edge">
<title>Node12&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M819.85,-1378.57C799.85,-1321.49 775.43,-1242.19 765,-1170 727.06,-907.39 671.32,-821.25 765,-573 773.73,-549.88 789.61,-528.42 806.14,-510.58"/>
<polygon fill="none" stroke="midnightblue" points="816.64,-1379.99 823.27,-1388.25 823.24,-1377.65 816.64,-1379.99"/>
</g>
<!-- Node13&#45;&gt;Node1 -->
<g id="edge16" class="edge">
<title>Node13&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M604.52,-163.08C613.69,-147.04 623.07,-130.63 631.59,-115.72"/>
<polygon fill="none" stroke="midnightblue" points="601.38,-161.52 599.46,-171.94 607.46,-165 601.38,-161.52"/>
</g>
<!-- Node14&#45;&gt;Node13 -->
<g id="edge19" class="edge">
<title>Node14&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M259.67,-578.1C260.78,-576.39 261.89,-574.69 263,-573 323.94,-480.55 410.87,-388.31 474.22,-326.22"/>
<polygon fill="none" stroke="midnightblue" points="256.6,-576.41 254.19,-586.73 262.51,-580.16 256.6,-576.41"/>
</g>
<!-- Node15 -->
<g id="node15" class="node">
<title>Node15</title>
<g id="a_node15"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_c_u_d_a_device_controller.html" target="_top" xlink:title="Controller class for CUDA device.">
<polygon fill="none" stroke="black" points="32,-1310.5 32,-1607.5 210,-1607.5 210,-1310.5 32,-1310.5"/>
<text text-anchor="start" x="40" y="-1593.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="121" y="-1580.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDADeviceController</text>
<polyline fill="none" stroke="black" points="32,-1573.5 210,-1573.5 "/>
<text text-anchor="middle" x="121" y="-1559.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="32,-1552.5 210,-1552.5 "/>
<text text-anchor="start" x="40" y="-1538.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static __host__ void</text>
<text text-anchor="start" x="40" y="-1525.9" font-family="Helvetica,sans-Serif" font-size="12.00"> ListCudaDevices()</text>
<text text-anchor="start" x="40" y="-1512.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ int</text>
<text text-anchor="start" x="40" y="-1499.9" font-family="Helvetica,sans-Serif" font-size="12.00"> CudaCheckNotifyErr</text>
<text text-anchor="start" x="40" y="-1486.9" font-family="Helvetica,sans-Serif" font-size="12.00">(cudaError_t _status,</text>
<text text-anchor="start" x="40" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *msg, bool</text>
<text text-anchor="start" x="40" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bExit=true)</text>
<text text-anchor="start" x="40" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMalloc2DToFlat(T</text>
<text text-anchor="start" x="40" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, int row, int col)</text>
<text text-anchor="start" x="40" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMemcpy2DToFlat(T</text>
<text text-anchor="start" x="40" y="-1382.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *dst, T **src, int row,</text>
<text text-anchor="start" x="40" y="-1369.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
<text text-anchor="start" x="40" y="-1356.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1343.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMigrate2DFlat(T</text>
<text text-anchor="start" x="40" y="-1330.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, T **src, int row,</text>
<text text-anchor="start" x="40" y="-1317.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
</a>
</g>
</g>
<!-- Node15&#45;&gt;Node14 -->
<g id="edge21" class="edge">
<title>Node15&#45;&gt;Node14</title>
<path fill="none" stroke="midnightblue" d="M122.62,-1300.05C123.03,-1259.53 123.49,-1214.61 123.96,-1169.54"/>
<polygon fill="none" stroke="midnightblue" points="119.12,-1300.22 122.51,-1310.25 126.12,-1300.29 119.12,-1300.22"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_markopy_c_l_i__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
