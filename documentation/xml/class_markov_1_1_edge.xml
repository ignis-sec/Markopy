<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_markov_1_1_edge" kind="class" language="C++" prot="public">
    <compoundname>Markov::Edge</compoundname>
    <includes refid="edge_8h" local="no">edge.h</includes>
    <templateparamlist>
      <param>
        <type>typename NodeStorageType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_markov_1_1_edge_1a622d63509c6179cec56963d803ad1592" prot="private" static="no" mutable="no">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt;NodeStorageType&gt;* Markov::Edge&lt; NodeStorageType &gt;::_left</definition>
        <argsstring></argsstring>
        <name>_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="64" column="14" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_markov_1_1_edge_1a1980a59351e80a7ef83fc04707529cfe" prot="private" static="no" mutable="no">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt;NodeStorageType&gt;* Markov::Edge&lt; NodeStorageType &gt;::_right</definition>
        <argsstring></argsstring>
        <name>_right</name>
        <briefdescription>
<para>source node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="65" column="14" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_markov_1_1_edge_1aab02482bfc40357c12aeb5f5ee3cd0a6" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t Markov::Edge&lt; NodeStorageType &gt;::_weight</definition>
        <argsstring></argsstring>
        <name>_weight</name>
        <briefdescription>
<para>target node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="66" column="10" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_markov_1_1_edge_1a36413aeee1084d1e555345d57bf27fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Markov::Edge&lt; NodeStorageType &gt;::Markov::Edge</definition>
        <argsstring>()</argsstring>
        <name>Markov::Edge</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="1" column="0"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a667f6d97af29300ad9217e80f1e6dae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Markov::Edge&lt; NodeStorageType &gt;::Markov::Edge</definition>
        <argsstring>(Markov::Node&lt; NodeStorageType &gt; *_left, Markov::Node&lt; NodeStorageType &gt; *_right)</argsstring>
        <name>Markov::Edge</name>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
          <declname>_left</declname>
        </param>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
          <declname>_right</declname>
        </param>
        <briefdescription>
<para>Constructor. Initialize edge with given right and left. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_left</parametername>
</parameternamelist>
<parameterdescription>
<para>- Left node of this edge. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_right</parametername>
</parameternamelist>
<parameterdescription>
<para>- Right node of this edge. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="1" column="0"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1ab36e4f8f7ae37b81966e10929097f2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Markov::Edge&lt; NodeStorageType &gt;::adjust</definition>
        <argsstring>(uint64_t offset)</argsstring>
        <name>adjust</name>
        <param>
          <type>uint64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Adjust the edge weight with offset. Adds the offset parameter to the edge weight. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>- value to be added to the weight </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="32" column="6" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1adaa67349cf3b42e4c012d2247aa40c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt; NodeStorageType &gt; * Markov::Edge&lt; NodeStorageType &gt;::traverse</definition>
        <argsstring>()</argsstring>
        <name>traverse</name>
        <briefdescription>
<para>Traverse this edge to right. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Right node. If this is a terminator node, return NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="37" column="14" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a03eeb872b6fff6aed120f090d3732827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Markov::Edge&lt; NodeStorageType &gt;::set_left</definition>
        <argsstring>(Markov::Node&lt; NodeStorageType &gt; *)</argsstring>
        <name>set_left</name>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>Set left of this edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>- <ref refid="class_markov_1_1_node" kindref="compound">Node</ref> to be linked with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="42" column="6" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1adef481bf5942f46f298b094ab93101b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Markov::Edge&lt; NodeStorageType &gt;::set_right</definition>
        <argsstring>(Markov::Node&lt; NodeStorageType &gt; *)</argsstring>
        <name>set_right</name>
        <param>
          <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>Set right of this edge. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>- <ref refid="class_markov_1_1_node" kindref="compound">Node</ref> to be linked with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="46" column="6" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1ab6160a5b9c6e8a51fe1ecba063e9402b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t Markov::Edge&lt; NodeStorageType &gt;::weight</definition>
        <argsstring>()</argsstring>
        <name>weight</name>
        <briefdescription>
<para>return edge&apos;s weight. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>edge&apos;s weight. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="51" column="10" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a642aa92fbeb81971c5ec9d2894d76402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt; NodeStorageType &gt; * Markov::Edge&lt; NodeStorageType &gt;::left</definition>
        <argsstring>()</argsstring>
        <name>left</name>
        <briefdescription>
<para>return edge&apos;s left </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>edge&apos;s left. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="56" column="14" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_1_1_edge_1a876e20dc6d98e046a7503f017cf553f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_markov_1_1_node" kindref="compound">Markov::Node</ref>&lt; NodeStorageType &gt; *</type>
        <definition>Markov::Node&lt; NodeStorageType &gt; * Markov::Edge&lt; NodeStorageType &gt;::right</definition>
        <argsstring>()</argsstring>
        <name>right</name>
        <briefdescription>
<para>return edge&apos;s right </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>edge&apos;s right. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="61" column="14" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_markov_1_1_edge" kindref="compound">Edge</ref> class used to link nodes in the model together. </para>
    </briefdescription>
    <detaileddescription>
<para>Has left, right, and weight of the edge. Edges are <emphasis>UNIDIRECTIONAL</emphasis> in this model. They can only be traversed left to right. </para>
    </detaileddescription>
    <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" line="15" column="1" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovModel/src/edge.h" bodystart="15" bodyend="67"/>
    <listofallmembers>
      <member refid="class_markov_1_1_edge_1a622d63509c6179cec56963d803ad1592" prot="private" virt="non-virtual"><scope>Markov::Edge</scope><name>_left</name></member>
      <member refid="class_markov_1_1_edge_1a1980a59351e80a7ef83fc04707529cfe" prot="private" virt="non-virtual"><scope>Markov::Edge</scope><name>_right</name></member>
      <member refid="class_markov_1_1_edge_1aab02482bfc40357c12aeb5f5ee3cd0a6" prot="private" virt="non-virtual"><scope>Markov::Edge</scope><name>_weight</name></member>
      <member refid="class_markov_1_1_edge_1ab36e4f8f7ae37b81966e10929097f2aa" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>adjust</name></member>
      <member refid="class_markov_1_1_edge_1a642aa92fbeb81971c5ec9d2894d76402" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>left</name></member>
      <member refid="class_markov_1_1_edge_1a36413aeee1084d1e555345d57bf27fdd" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>Markov::Edge</name></member>
      <member refid="class_markov_1_1_edge_1a667f6d97af29300ad9217e80f1e6dae1" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>Markov::Edge</name></member>
      <member refid="class_markov_1_1_edge_1a876e20dc6d98e046a7503f017cf553f2" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>right</name></member>
      <member refid="class_markov_1_1_edge_1a03eeb872b6fff6aed120f090d3732827" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>set_left</name></member>
      <member refid="class_markov_1_1_edge_1adef481bf5942f46f298b094ab93101b7" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>set_right</name></member>
      <member refid="class_markov_1_1_edge_1adaa67349cf3b42e4c012d2247aa40c92" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>traverse</name></member>
      <member refid="class_markov_1_1_edge_1ab6160a5b9c6e8a51fe1ecba063e9402b" prot="public" virt="non-virtual"><scope>Markov::Edge</scope><name>weight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
