<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Python.Markopy.MarkovPasswordsCLI Pages: 1 -->
<svg width="612pt" height="1651pt"
 viewBox="0.00 0.00 612.00 1651.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1647)">
<title>Python.Markopy.MarkovPasswordsCLI</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::MarkovPasswords.">
<polygon fill="#bfbfbf" stroke="black" points="166,-382.5 166,-484.5 405,-484.5 405,-382.5 166,-382.5"/>
<text text-anchor="middle" x="285.5" y="-470.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovPasswordsCLI</text>
<polyline fill="none" stroke="black" points="166,-463.5 405,-463.5 "/>
<text text-anchor="start" x="174" y="-449.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<polyline fill="none" stroke="black" points="166,-442.5 405,-442.5 "/>
<text text-anchor="start" x="174" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="174" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="174" y="-402.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="174" y="-389.9" font-family="Helvetica,sans-Serif" font-size="12.00"> wordlist)</text>
</a>
</g>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="class_python_1_1_markopy_1_1_markopy_c_l_i.html" target="_top" xlink:title="Top level model selector for Markopy CLI.">
<polygon fill="none" stroke="black" points="192.5,-152.5 192.5,-345.5 378.5,-345.5 378.5,-152.5 192.5,-152.5"/>
<text text-anchor="middle" x="285.5" y="-331.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkopyCLI</text>
<polyline fill="none" stroke="black" points="192.5,-324.5 378.5,-324.5 "/>
<text text-anchor="start" x="200.5" y="-310.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="200.5" y="-297.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="192.5,-290.5 378.5,-290.5 "/>
<text text-anchor="start" x="200.5" y="-276.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="200.5" y="-263.9" font-family="Helvetica,sans-Serif" font-size="12.00"> add_help=False)</text>
<text text-anchor="start" x="200.5" y="-250.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="200.5" y="-237.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="200.5" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="200.5" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="200.5" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="200.5" y="-185.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
<text text-anchor="start" x="200.5" y="-172.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="200.5" y="-159.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def stub(self)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node1&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M285.5,-372.02C285.5,-363.54 285.5,-354.65 285.5,-345.71"/>
<polygon fill="none" stroke="midnightblue" points="282,-372.15 285.5,-382.15 289,-372.15 282,-372.15"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_python_1_1_markopy_1_1_abstract_training_model_c_l_i.html" target="_top" xlink:title="abstract class for training capable models">
<polygon fill="none" stroke="black" points="68.5,-554 68.5,-630 280.5,-630 280.5,-554 68.5,-554"/>
<text text-anchor="start" x="76.5" y="-616.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractTraining</text>
<text text-anchor="middle" x="174.5" y="-603.4" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="68.5,-596 280.5,-596 "/>
<text text-anchor="middle" x="174.5" y="-582.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="68.5,-575 280.5,-575 "/>
<text text-anchor="start" x="76.5" y="-561.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M206.66,-545.66C220.21,-526.55 236.03,-504.24 249.93,-484.64"/>
<polygon fill="none" stroke="midnightblue" points="203.74,-543.73 200.81,-553.91 209.45,-547.78 203.74,-543.73"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_python_1_1_markopy_1_1_abstract_generation_model_c_l_i.html" target="_top" xlink:title="abstract class for generation capable models">
<polygon fill="none" stroke="black" points="58,-881.5 58,-957.5 291,-957.5 291,-881.5 58,-881.5"/>
<text text-anchor="start" x="66" y="-943.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractGeneration</text>
<text text-anchor="middle" x="174.5" y="-930.9" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="58,-923.5 291,-923.5 "/>
<text text-anchor="middle" x="174.5" y="-909.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="58,-902.5 291,-902.5 "/>
<text text-anchor="start" x="66" y="-888.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M174.5,-871.47C174.5,-806.28 174.5,-689.77 174.5,-630.24"/>
<polygon fill="none" stroke="midnightblue" points="171,-871.48 174.5,-881.48 178,-871.48 171,-871.48"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="class_python_1_1_markopy_1_1_base_c_l_i.html" target="_top" xlink:title="Base CLI class to handle user interactions">
<polygon fill="none" stroke="black" points="0,-1176.5 0,-1642.5 205,-1642.5 205,-1176.5 0,-1176.5"/>
<text text-anchor="middle" x="102.5" y="-1628.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.BaseCLI</text>
<polyline fill="none" stroke="black" points="0,-1621.5 205,-1621.5 "/>
<text text-anchor="start" x="8" y="-1607.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ parser</text>
<text text-anchor="start" x="8" y="-1594.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ print_help</text>
<text text-anchor="start" x="8" y="-1581.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="8" y="-1568.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<polyline fill="none" stroke="black" points="0,-1561.5 205,-1561.5 "/>
<text text-anchor="start" x="8" y="-1547.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="8" y="-1534.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="8" y="-1521.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="8" y="-1508.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="8" y="-1495.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="8" y="-1482.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="8" y="-1469.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="8" y="-1456.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_arguments</text>
<text text-anchor="start" x="8" y="-1443.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="8" y="-1430.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def import_model(self,</text>
<text text-anchor="start" x="8" y="-1417.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str filename)</text>
<text text-anchor="start" x="8" y="-1404.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def train(self, str</text>
<text text-anchor="start" x="8" y="-1391.9" font-family="Helvetica,sans-Serif" font-size="12.00"> dataset, str seperator,</text>
<text text-anchor="start" x="8" y="-1378.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str output, bool output</text>
<text text-anchor="start" x="8" y="-1365.9" font-family="Helvetica,sans-Serif" font-size="12.00">_forced=False, bool bulk=False)</text>
<text text-anchor="start" x="8" y="-1352.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def export(self, str</text>
<text text-anchor="start" x="8" y="-1339.9" font-family="Helvetica,sans-Serif" font-size="12.00"> filename)</text>
<text text-anchor="start" x="8" y="-1326.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def generate(self,</text>
<text text-anchor="start" x="8" y="-1313.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, bool</text>
<text text-anchor="start" x="8" y="-1300.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bulk=False)</text>
<text text-anchor="start" x="8" y="-1287.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="8" y="-1274.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_import_path</text>
<text text-anchor="start" x="8" y="-1261.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="8" y="-1248.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_corpus_path</text>
<text text-anchor="start" x="8" y="-1235.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="8" y="-1222.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_export_path</text>
<text text-anchor="start" x="8" y="-1209.9" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="8" y="-1196.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="8" y="-1183.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M26.53,-1166.28C-4.4,-1023.93 -19.03,-844.05 48.5,-699 61.59,-670.88 86.22,-647.56 110.25,-630.01"/>
<polygon fill="none" stroke="midnightblue" points="23.2,-1167.45 28.78,-1176.46 30.04,-1165.94 23.2,-1167.45"/>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M138.22,-1166.38C150.22,-1085.08 162.25,-1003.5 169,-957.75"/>
<polygon fill="none" stroke="midnightblue" points="134.76,-1165.89 136.76,-1176.29 141.68,-1166.91 134.76,-1165.89"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="class_python_1_1_markopy_1_1_markov_model.html" target="_top" xlink:title="Abstract representation of a markov model.">
<polygon fill="none" stroke="black" points="328.5,-521.5 328.5,-662.5 524.5,-662.5 524.5,-521.5 328.5,-521.5"/>
<text text-anchor="middle" x="426.5" y="-648.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.MarkovModel</text>
<polyline fill="none" stroke="black" points="328.5,-641.5 524.5,-641.5 "/>
<text text-anchor="middle" x="426.5" y="-627.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="328.5,-620.5 524.5,-620.5 "/>
<text text-anchor="start" x="336.5" y="-606.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Import(str filename)</text>
<text text-anchor="start" x="336.5" y="-593.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Export(str filename)</text>
<text text-anchor="start" x="336.5" y="-580.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Train(str dataset,</text>
<text text-anchor="start" x="336.5" y="-567.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str seperator, int threads)</text>
<text text-anchor="start" x="336.5" y="-554.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def Generate(int count,</text>
<text text-anchor="start" x="336.5" y="-541.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, int minlen,</text>
<text text-anchor="start" x="336.5" y="-528.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxlen, int threads)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M357,-513.86C348.04,-503.92 339.06,-493.95 330.64,-484.6"/>
<polygon fill="none" stroke="midnightblue" points="354.54,-516.36 363.83,-521.45 359.74,-511.67 354.54,-516.36"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="class_markov_1_1_a_p_i_1_1_markov_passwords.html" target="_top" xlink:title="Markov::Model with char represented nodes.">
<polygon fill="none" stroke="black" points="309,-699.5 309,-1139.5 604,-1139.5 604,-699.5 309,-699.5"/>
<text text-anchor="middle" x="456.5" y="-1125.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::MarkovPasswords</text>
<polyline fill="none" stroke="black" points="309,-1118.5 604,-1118.5 "/>
<text text-anchor="start" x="317" y="-1104.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ifstream * datasetFile</text>
<text text-anchor="start" x="317" y="-1091.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * modelSavefile</text>
<text text-anchor="start" x="317" y="-1078.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * outputFile</text>
<polyline fill="none" stroke="black" points="309,-1071.5 604,-1071.5 "/>
<text text-anchor="start" x="317" y="-1057.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords()</text>
<text text-anchor="start" x="317" y="-1044.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords(const</text>
<text text-anchor="start" x="317" y="-1031.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *filename)</text>
<text text-anchor="start" x="317" y="-1018.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ifstream * OpenDataset</text>
<text text-anchor="start" x="317" y="-1005.9" font-family="Helvetica,sans-Serif" font-size="12.00">File(const char *filename)</text>
<text text-anchor="start" x="317" y="-992.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="317" y="-979.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="317" y="-966.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="317" y="-953.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ofstream * Save</text>
<text text-anchor="start" x="317" y="-940.9" font-family="Helvetica,sans-Serif" font-size="12.00">(const char *filename)</text>
<text text-anchor="start" x="317" y="-927.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Generate(unsigned</text>
<text text-anchor="start" x="317" y="-914.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, const char</text>
<text text-anchor="start" x="317" y="-901.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *wordlistFileName, int</text>
<text text-anchor="start" x="317" y="-888.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen=6, int maxLen=12,</text>
<text text-anchor="start" x="317" y="-875.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int threads=20)</text>
<text text-anchor="start" x="317" y="-862.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Buff(const char</text>
<text text-anchor="start" x="317" y="-849.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *str, double multiplier,</text>
<text text-anchor="start" x="317" y="-836.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bDontAdjustSelfLoops</text>
<text text-anchor="start" x="317" y="-823.9" font-family="Helvetica,sans-Serif" font-size="12.00">=true, bool bDontAdjustExtendedLoops=false)</text>
<text text-anchor="start" x="317" y="-810.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void TrainThread(Markov</text>
<text text-anchor="start" x="317" y="-797.9" font-family="Helvetica,sans-Serif" font-size="12.00">::API::Concurrency::ThreadShared</text>
<text text-anchor="start" x="317" y="-784.9" font-family="Helvetica,sans-Serif" font-size="12.00">ListHandler *listhandler, char</text>
<text text-anchor="start" x="317" y="-771.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter)</text>
<text text-anchor="start" x="317" y="-758.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void GenerateThread</text>
<text text-anchor="start" x="317" y="-745.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *outputLock,</text>
<text text-anchor="start" x="317" y="-732.9" font-family="Helvetica,sans-Serif" font-size="12.00"> unsigned long int n, std</text>
<text text-anchor="start" x="317" y="-719.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, int</text>
<text text-anchor="start" x="317" y="-706.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M435.35,-689.02C434.5,-679.83 433.69,-670.97 432.92,-662.62"/>
<polygon fill="none" stroke="midnightblue" points="431.88,-689.49 436.28,-699.13 438.85,-688.85 431.88,-689.49"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="class_markov_1_1_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="350.5,-1228.5 350.5,-1590.5 562.5,-1590.5 562.5,-1228.5 350.5,-1228.5"/>
<text text-anchor="middle" x="456.5" y="-1576.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::Model&lt; char &gt;</text>
<polyline fill="none" stroke="black" points="350.5,-1569.5 562.5,-1569.5 "/>
<text text-anchor="start" x="358.5" y="-1555.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::map&lt; char, Node</text>
<text text-anchor="start" x="358.5" y="-1542.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; nodes</text>
<text text-anchor="start" x="358.5" y="-1529.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; Node&lt; char &gt; * starterNode</text>
<text text-anchor="start" x="358.5" y="-1516.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="358.5" y="-1503.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; edges</text>
<polyline fill="none" stroke="black" points="350.5,-1496.5 562.5,-1496.5 "/>
<text text-anchor="start" x="358.5" y="-1482.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Model()</text>
<text text-anchor="start" x="358.5" y="-1469.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ char * RandomWalk(Markov</text>
<text text-anchor="start" x="358.5" y="-1456.9" font-family="Helvetica,sans-Serif" font-size="12.00">::Random::RandomEngine</text>
<text text-anchor="start" x="358.5" y="-1443.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *randomEngine, int minSetting,</text>
<text text-anchor="start" x="358.5" y="-1430.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxSetting, char *buffer)</text>
<text text-anchor="start" x="358.5" y="-1417.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void AdjustEdge(const</text>
<text text-anchor="start" x="358.5" y="-1404.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *payload, long</text>
<text text-anchor="start" x="358.5" y="-1391.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int occurrence)</text>
<text text-anchor="start" x="358.5" y="-1378.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(std::ifstream *)</text>
<text text-anchor="start" x="358.5" y="-1365.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(const char</text>
<text text-anchor="start" x="358.5" y="-1352.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="358.5" y="-1339.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(std::ofstream *)</text>
<text text-anchor="start" x="358.5" y="-1326.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(const char</text>
<text text-anchor="start" x="358.5" y="-1313.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="358.5" y="-1300.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Node&lt; char &gt; * StarterNode()</text>
<text text-anchor="start" x="358.5" y="-1287.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="358.5" y="-1274.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; * Edges()</text>
<text text-anchor="start" x="358.5" y="-1261.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::map&lt; char, Node</text>
<text text-anchor="start" x="358.5" y="-1248.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; * Nodes()</text>
<text text-anchor="start" x="358.5" y="-1235.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void OptimizeEdgeOrder()</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M456.5,-1218.01C456.5,-1192.36 456.5,-1165.88 456.5,-1139.78"/>
<polygon fill="none" stroke="midnightblue" points="453,-1218.17 456.5,-1228.17 460,-1218.17 453,-1218.17"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_markopy_c_l_i.html" target="_top" xlink:title="CUDA extension to MarkopyCLI.">
<polygon fill="none" stroke="black" points="161.5,-0.5 161.5,-115.5 409.5,-115.5 409.5,-0.5 161.5,-0.5"/>
<text text-anchor="middle" x="285.5" y="-101.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaMarkopyCLI</text>
<polyline fill="none" stroke="black" points="161.5,-94.5 409.5,-94.5 "/>
<text text-anchor="start" x="169.5" y="-80.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="169.5" y="-67.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="161.5,-60.5 409.5,-60.5 "/>
<text text-anchor="start" x="169.5" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ None __init__(self)</text>
<text text-anchor="start" x="169.5" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="169.5" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="169.5" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node8&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M285.5,-142.13C285.5,-133.07 285.5,-124.16 285.5,-115.72"/>
<polygon fill="none" stroke="midnightblue" points="282,-142.39 285.5,-152.39 289,-142.39 282,-142.39"/>
</g>
</g>
</svg>
