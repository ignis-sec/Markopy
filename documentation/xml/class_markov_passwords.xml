<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_markov_passwords" kind="class" language="C++" prot="public">
    <compoundname>MarkovPasswords</compoundname>
    <basecompoundref refid="class_markov_1_1_model" prot="private" virt="non-virtual">Markov::Model&lt; char &gt;</basecompoundref>
    <includes refid="markov_passwords_8h" local="no">markovPasswords.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_markov_passwords_1abb4e3cd729c7ef289ac0e9a8c2a4d208" prot="private" static="no" mutable="no">
        <type>std::ifstream *</type>
        <definition>std::ifstream* MarkovPasswords::datasetFile</definition>
        <argsstring></argsstring>
        <name>datasetFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="52" column="15" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_markov_passwords_1a558d8e28a41af38a34dab6eeb2c0374a" prot="private" static="no" mutable="no">
        <type>std::ofstream *</type>
        <definition>std::ofstream* MarkovPasswords::modelSavefile</definition>
        <argsstring></argsstring>
        <name>modelSavefile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="53" column="15" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_markov_passwords_1ab116d35b45b3128e64962b98764a79e7" prot="private" static="no" mutable="no">
        <type>std::ofstream *</type>
        <definition>std::ofstream* MarkovPasswords::outputFile</definition>
        <argsstring></argsstring>
        <name>outputFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="54" column="15" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_markov_passwords_1aa5e8784aa8c5c873b85ac9aeef7b430c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MarkovPasswords::MarkovPasswords</definition>
        <argsstring>()</argsstring>
        <name>MarkovPasswords</name>
        <briefdescription>
<para>Initialize the markov model from MarkovModel::Markov::Model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_passwords_1a54cf1e3d31020ae9546574586d5181fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MarkovPasswords::MarkovPasswords</definition>
        <argsstring>(char *filename)</argsstring>
        <name>MarkovPasswords</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Initialize the markov model from MarkovModel::Markov::Model, with an import file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calls the <ref refid="class_markov_1_1_model_1a379ea9943f9d4c212e1140d4a9af64f5" kindref="member">Markov::Model::Import</ref> on the filename to construct the model <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>- Filename to import </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the constructed model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_passwords_1a30f494674255dd9d7fd49a6f2b282e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ifstream *</type>
        <definition>std::ifstream* MarkovPasswords::OpenDatasetFile</definition>
        <argsstring>(char *filename)</argsstring>
        <name>OpenDatasetFile</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Open dataset file and return the ifstream pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>- Filename to open </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ifstream* to the the dataset file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="28" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_passwords_1a1f98bc18800dabc30d9477513d86db81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MarkovPasswords::Train</definition>
        <argsstring>(std::ifstream *datasetFile)</argsstring>
        <name>Train</name>
        <param>
          <type>std::ifstream *</type>
          <declname>datasetFile</declname>
        </param>
        <briefdescription>
<para>Train the model with the dataset file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>- Ifstream* to the dataset. If null, use class member </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="34" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_passwords_1a2cf2f81e86f45e5ec8840fbb82edc2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream* MarkovPasswords::Save</definition>
        <argsstring>(char *filename)</argsstring>
        <name>Save</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Export model to file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>- Export filename. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ofstream* of the exported file. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="40" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_markov_passwords_1a8787ba47e5ae8dfe38f06a693727c2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream* MarkovPasswords::Generate</definition>
        <argsstring>(unsigned long int n)</argsstring>
        <name>Generate</name>
        <param>
          <type>unsigned long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Call <ref refid="class_markov_1_1_model_1a2e0249e4630353a260e06b8f3a72f5bb" kindref="member">Markov::Model::RandomWalk</ref> n times, and collect output. </para>
        </briefdescription>
        <detaileddescription>
<para>Write the data to this-&gt;outputfile</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>- Number of passwords to generate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ofstream* of the output file. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="49" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_markov_1_1_model" kindref="compound">Markov::Model</ref> with char represented nodes. </para>
    </briefdescription>
    <detaileddescription>
<para>Includes wrappers for <ref refid="class_markov_1_1_model" kindref="compound">Markov::Model</ref> and additional helper functions to handle file I/O </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Markov::Model&lt; char &gt;</label>
        <link refid="class_markov_1_1_model"/>
      </node>
      <node id="1">
        <label>MarkovPasswords</label>
        <link refid="class_markov_passwords"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Markov::Model&lt; char &gt;</label>
        <link refid="class_markov_1_1_model"/>
      </node>
      <node id="1">
        <label>MarkovPasswords</label>
        <link refid="class_markov_passwords"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" line="8" column="1" bodyfile="D:/Repositories/MarkovPasswords/Win-visualstudio/MarkovPasswords/src/markovPasswords.h" bodystart="8" bodyend="55"/>
    <listofallmembers>
      <member refid="class_markov_passwords_1abb4e3cd729c7ef289ac0e9a8c2a4d208" prot="private" virt="non-virtual"><scope>MarkovPasswords</scope><name>datasetFile</name></member>
      <member refid="class_markov_passwords_1a8787ba47e5ae8dfe38f06a693727c2db" prot="public" virt="non-virtual"><scope>MarkovPasswords</scope><name>Generate</name></member>
      <member refid="class_markov_passwords_1aa5e8784aa8c5c873b85ac9aeef7b430c" prot="public" virt="non-virtual"><scope>MarkovPasswords</scope><name>MarkovPasswords</name></member>
      <member refid="class_markov_passwords_1a54cf1e3d31020ae9546574586d5181fd" prot="public" virt="non-virtual"><scope>MarkovPasswords</scope><name>MarkovPasswords</name></member>
      <member refid="class_markov_passwords_1a558d8e28a41af38a34dab6eeb2c0374a" prot="private" virt="non-virtual"><scope>MarkovPasswords</scope><name>modelSavefile</name></member>
      <member refid="class_markov_passwords_1a30f494674255dd9d7fd49a6f2b282e36" prot="public" virt="non-virtual"><scope>MarkovPasswords</scope><name>OpenDatasetFile</name></member>
      <member refid="class_markov_passwords_1ab116d35b45b3128e64962b98764a79e7" prot="private" virt="non-virtual"><scope>MarkovPasswords</scope><name>outputFile</name></member>
      <member refid="class_markov_passwords_1a2cf2f81e86f45e5ec8840fbb82edc2c4" prot="public" virt="non-virtual"><scope>MarkovPasswords</scope><name>Save</name></member>
      <member refid="class_markov_passwords_1a1f98bc18800dabc30d9477513d86db81" prot="public" virt="non-virtual"><scope>MarkovPasswords</scope><name>Train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
