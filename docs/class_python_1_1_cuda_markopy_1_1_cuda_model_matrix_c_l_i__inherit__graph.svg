<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Python.CudaMarkopy.CudaModelMatrixCLI Pages: 1 -->
<!--zoomable 2557 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 721;
var viewHeight = 2557;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Python.CudaMarkopy.CudaModelMatrixCLI</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Python CLI wrapper for CudaModelMatrix.">
<polygon fill="#bfbfbf" stroke="black" points="284.5,-152.5 284.5,-306.5 497.5,-306.5 497.5,-152.5 284.5,-152.5"/>
<text text-anchor="start" x="292.5" y="-292.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaModel</text>
<text text-anchor="middle" x="391" y="-279.9" font-family="Helvetica,sans-Serif" font-size="12.00">MatrixCLI</text>
<polyline fill="none" stroke="black" points="284.5,-272.5 497.5,-272.5 "/>
<text text-anchor="start" x="292.5" y="-258.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="292.5" y="-245.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bInfinite</text>
<polyline fill="none" stroke="black" points="284.5,-238.5 497.5,-238.5 "/>
<text text-anchor="start" x="292.5" y="-224.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self)</text>
<text text-anchor="start" x="292.5" y="-211.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="292.5" y="-198.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="292.5" y="-185.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="292.5" y="-172.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="292.5" y="-159.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_markopy_c_l_i.html" target="_top" xlink:title="CUDA extension to MarkopyCLI.">
<polygon fill="none" stroke="black" points="267,-0.5 267,-115.5 515,-115.5 515,-0.5 267,-0.5"/>
<text text-anchor="middle" x="391" y="-101.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.CudaMarkopy.CudaMarkopyCLI</text>
<polyline fill="none" stroke="black" points="267,-94.5 515,-94.5 "/>
<text text-anchor="start" x="275" y="-80.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<text text-anchor="start" x="275" y="-67.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ cli</text>
<polyline fill="none" stroke="black" points="267,-60.5 515,-60.5 "/>
<text text-anchor="start" x="275" y="-46.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ None __init__(self)</text>
<text text-anchor="start" x="275" y="-33.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="275" y="-20.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="275" y="-7.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_fail(self)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node11 -->
<g id="edge12" class="edge">
<title>Node1&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M391,-142.06C391,-133.08 391,-124.13 391,-115.61"/>
<polygon fill="none" stroke="midnightblue" points="387.5,-142.18 391,-152.18 394.5,-142.18 387.5,-142.18"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix_c_l_i.html" target="_top" xlink:title="Extension of Python.Markopy.Base.BaseCLI for Markov::API::ModelMatrix.">
<polygon fill="none" stroke="black" points="287,-343.5 287,-497.5 495,-497.5 495,-343.5 287,-343.5"/>
<text text-anchor="middle" x="391" y="-483.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrixCLI</text>
<polyline fill="none" stroke="black" points="287,-476.5 495,-476.5 "/>
<text text-anchor="start" x="295" y="-462.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="295" y="-449.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ fileIO</text>
<polyline fill="none" stroke="black" points="287,-442.5 495,-442.5 "/>
<text text-anchor="start" x="295" y="-428.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="295" y="-415.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="295" y="-402.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="295" y="-389.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="295" y="-376.9" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="295" y="-363.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="295" y="-350.9" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M391,-333.44C391,-324.52 391,-315.51 391,-306.71"/>
<polygon fill="none" stroke="midnightblue" points="387.5,-333.44 391,-343.44 394.5,-333.44 387.5,-333.44"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="class_python_1_1_markopy_1_1_abstract_generation_model_c_l_i.html" target="_top" xlink:title="abstract class for generation capable models">
<polygon fill="none" stroke="black" points="479.5,-794.5 479.5,-870.5 712.5,-870.5 712.5,-794.5 479.5,-794.5"/>
<text text-anchor="start" x="487.5" y="-856.9" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.AbstractGeneration</text>
<text text-anchor="middle" x="596" y="-843.9" font-family="Helvetica,sans-Serif" font-size="12.00">ModelCLI</text>
<polyline fill="none" stroke="black" points="479.5,-836.5 712.5,-836.5 "/>
<text text-anchor="middle" x="596" y="-822.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="479.5,-815.5 712.5,-815.5 "/>
<text text-anchor="start" x="487.5" y="-801.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge8" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M596.19,-784.2C594.66,-693.32 581.97,-490.28 504,-343 497.26,-330.28 488.6,-318.08 479.08,-306.72"/>
<polygon fill="none" stroke="midnightblue" points="592.69,-784.5 596.32,-794.46 599.69,-784.41 592.69,-784.5"/>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M579.92,-784.54C558.6,-724.62 518.11,-618.62 471,-534 464.3,-521.96 456.57,-509.65 448.62,-497.81"/>
<polygon fill="none" stroke="midnightblue" points="576.67,-785.84 583.3,-794.1 583.27,-783.51 576.67,-785.84"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="class_python_1_1_markopy_1_1_base_c_l_i.html" target="_top" xlink:title="Base CLI class to handle user interactions">
<polygon fill="none" stroke="black" points="500.5,-1187 500.5,-1653 705.5,-1653 705.5,-1187 500.5,-1187"/>
<text text-anchor="middle" x="603" y="-1639.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.BaseCLI</text>
<polyline fill="none" stroke="black" points="500.5,-1632 705.5,-1632 "/>
<text text-anchor="start" x="508.5" y="-1618.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ parser</text>
<text text-anchor="start" x="508.5" y="-1605.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ print_help</text>
<text text-anchor="start" x="508.5" y="-1592.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ model</text>
<text text-anchor="start" x="508.5" y="-1579.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ args</text>
<polyline fill="none" stroke="black" points="500.5,-1572 705.5,-1572 "/>
<text text-anchor="start" x="508.5" y="-1558.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def __init__(self,</text>
<text text-anchor="start" x="508.5" y="-1545.4" font-family="Helvetica,sans-Serif" font-size="12.00"> bool add_help=True)</text>
<text text-anchor="start" x="508.5" y="-1532.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def add_arguments(self)</text>
<text text-anchor="start" x="508.5" y="-1519.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def help(self)</text>
<text text-anchor="start" x="508.5" y="-1506.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse(self)</text>
<text text-anchor="start" x="508.5" y="-1493.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def init_post_arguments</text>
<text text-anchor="start" x="508.5" y="-1480.4" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="508.5" y="-1467.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def parse_arguments</text>
<text text-anchor="start" x="508.5" y="-1454.4" font-family="Helvetica,sans-Serif" font-size="12.00">(self)</text>
<text text-anchor="start" x="508.5" y="-1441.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def import_model(self,</text>
<text text-anchor="start" x="508.5" y="-1428.4" font-family="Helvetica,sans-Serif" font-size="12.00"> str filename)</text>
<text text-anchor="start" x="508.5" y="-1415.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def train(self, str</text>
<text text-anchor="start" x="508.5" y="-1402.4" font-family="Helvetica,sans-Serif" font-size="12.00"> dataset, str seperator,</text>
<text text-anchor="start" x="508.5" y="-1389.4" font-family="Helvetica,sans-Serif" font-size="12.00"> str output, bool output</text>
<text text-anchor="start" x="508.5" y="-1376.4" font-family="Helvetica,sans-Serif" font-size="12.00">_forced=False, bool bulk=False)</text>
<text text-anchor="start" x="508.5" y="-1363.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def export(self, str</text>
<text text-anchor="start" x="508.5" y="-1350.4" font-family="Helvetica,sans-Serif" font-size="12.00"> filename)</text>
<text text-anchor="start" x="508.5" y="-1337.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def generate(self,</text>
<text text-anchor="start" x="508.5" y="-1324.4" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist, bool</text>
<text text-anchor="start" x="508.5" y="-1311.4" font-family="Helvetica,sans-Serif" font-size="12.00"> bulk=False)</text>
<text text-anchor="start" x="508.5" y="-1298.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def process(self)</text>
<text text-anchor="start" x="508.5" y="-1285.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_import_path</text>
<text text-anchor="start" x="508.5" y="-1272.4" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="508.5" y="-1259.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_corpus_path</text>
<text text-anchor="start" x="508.5" y="-1246.4" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="508.5" y="-1233.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def check_export_path</text>
<text text-anchor="start" x="508.5" y="-1220.4" font-family="Helvetica,sans-Serif" font-size="12.00">(str filename)</text>
<text text-anchor="start" x="508.5" y="-1207.4" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; def _generate(self,</text>
<text text-anchor="start" x="508.5" y="-1194.4" font-family="Helvetica,sans-Serif" font-size="12.00"> str wordlist)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M600.1,-1176.58C598.71,-1059.84 597.18,-932.1 596.44,-870.63"/>
<polygon fill="none" stroke="midnightblue" points="596.6,-1176.8 600.22,-1186.75 603.6,-1176.71 596.6,-1176.8"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="class_python_1_1_markopy_1_1_model_matrix.html" target="_top" xlink:title="Abstract representation of a matrix based model.">
<polygon fill="none" stroke="black" points="272.5,-788 272.5,-877 461.5,-877 461.5,-788 272.5,-788"/>
<text text-anchor="middle" x="367" y="-863.4" font-family="Helvetica,sans-Serif" font-size="12.00">Python.Markopy.ModelMatrix</text>
<polyline fill="none" stroke="black" points="272.5,-856 461.5,-856 "/>
<text text-anchor="middle" x="367" y="-842.4" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="272.5,-835 461.5,-835 "/>
<text text-anchor="start" x="280.5" y="-821.4" font-family="Helvetica,sans-Serif" font-size="12.00">+ def FastRandomWalk</text>
<text text-anchor="start" x="280.5" y="-808.4" font-family="Helvetica,sans-Serif" font-size="12.00">(int count, str wordlist,</text>
<text text-anchor="start" x="280.5" y="-795.4" font-family="Helvetica,sans-Serif" font-size="12.00"> int minlen, int maxlen)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M370.16,-777.47C374.36,-705.84 381.78,-579.04 386.54,-497.7"/>
<polygon fill="none" stroke="midnightblue" points="366.66,-777.44 369.57,-787.62 373.65,-777.84 366.66,-777.44"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="class_markov_1_1_a_p_i_1_1_model_matrix.html" target="_top" xlink:title="Class to flatten and reduce Markov::Model to a Matrix.">
<polygon fill="none" stroke="black" points="228,-1167.5 228,-1672.5 482,-1672.5 482,-1167.5 228,-1167.5"/>
<text text-anchor="middle" x="355" y="-1658.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::ModelMatrix</text>
<polyline fill="none" stroke="black" points="228,-1651.5 482,-1651.5 "/>
<text text-anchor="start" x="236" y="-1637.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char ** edgeMatrix</text>
<text text-anchor="start" x="236" y="-1624.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int ** valueMatrix</text>
<text text-anchor="start" x="236" y="-1611.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int matrixSize</text>
<text text-anchor="start" x="236" y="-1598.9" font-family="Helvetica,sans-Serif" font-size="12.00"># char * matrixIndex</text>
<text text-anchor="start" x="236" y="-1585.9" font-family="Helvetica,sans-Serif" font-size="12.00"># long int * totalEdgeWeights</text>
<text text-anchor="start" x="236" y="-1572.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool ready</text>
<polyline fill="none" stroke="black" points="228,-1565.5 482,-1565.5 "/>
<text text-anchor="start" x="236" y="-1551.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ ModelMatrix()</text>
<text text-anchor="start" x="236" y="-1538.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool ConstructMatrix()</text>
<text text-anchor="start" x="236" y="-1525.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void DumpJSON()</text>
<text text-anchor="start" x="236" y="-1512.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ int FastRandomWalk</text>
<text text-anchor="start" x="236" y="-1499.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="236" y="-1486.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *wordlistFileName,</text>
<text text-anchor="start" x="236" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="236" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool bFileIO=true)</text>
<text text-anchor="start" x="236" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Import(const char</text>
<text text-anchor="start" x="236" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="236" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="236" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="236" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="236" y="-1382.9" font-family="Helvetica,sans-Serif" font-size="12.00"># int FastRandomWalk</text>
<text text-anchor="start" x="236" y="-1369.9" font-family="Helvetica,sans-Serif" font-size="12.00">(unsigned long int n,</text>
<text text-anchor="start" x="236" y="-1356.9" font-family="Helvetica,sans-Serif" font-size="12.00"> std::ofstream *wordlist,</text>
<text text-anchor="start" x="236" y="-1343.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen=6, int maxLen</text>
<text text-anchor="start" x="236" y="-1330.9" font-family="Helvetica,sans-Serif" font-size="12.00">=12, int threads=20, bool</text>
<text text-anchor="start" x="236" y="-1317.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO=true)</text>
<text text-anchor="start" x="236" y="-1304.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkPartition</text>
<text text-anchor="start" x="236" y="-1291.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std::</text>
<text text-anchor="start" x="236" y="-1278.9" font-family="Helvetica,sans-Serif" font-size="12.00">ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="236" y="-1265.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="236" y="-1252.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, bool bFileIO, int threads)</text>
<text text-anchor="start" x="236" y="-1239.9" font-family="Helvetica,sans-Serif" font-size="12.00"># void FastRandomWalkThread</text>
<text text-anchor="start" x="236" y="-1226.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *mlock, std</text>
<text text-anchor="start" x="236" y="-1213.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, unsigned</text>
<text text-anchor="start" x="236" y="-1200.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, int minLen, int</text>
<text text-anchor="start" x="236" y="-1187.9" font-family="Helvetica,sans-Serif" font-size="12.00"> maxLen, int id, bool bFileIO)</text>
<text text-anchor="start" x="236" y="-1174.9" font-family="Helvetica,sans-Serif" font-size="12.00"># bool DeallocateMatrix()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M360.36,-1157.27C362.56,-1050.01 364.88,-937.14 366.11,-877.11"/>
<polygon fill="none" stroke="midnightblue" points="356.86,-1157.23 360.16,-1167.3 363.86,-1157.37 356.86,-1157.23"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_c_u_d_a_model_matrix.html" target="_top" xlink:title="Extension of Markov::API::ModelMatrix which is modified to run on GPU devices.">
<polygon fill="none" stroke="black" points="0,-534.5 0,-1130.5 254,-1130.5 254,-534.5 0,-534.5"/>
<text text-anchor="start" x="8" y="-1116.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="127" y="-1103.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDAModelMatrix</text>
<polyline fill="none" stroke="black" points="0,-1096.5 254,-1096.5 "/>
<text text-anchor="start" x="8" y="-1082.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_edgeMatrix</text>
<text text-anchor="start" x="8" y="-1069.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_valueMatrix</text>
<text text-anchor="start" x="8" y="-1056.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * device_matrixIndex</text>
<text text-anchor="start" x="8" y="-1043.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * device_totalEdge</text>
<text text-anchor="start" x="8" y="-1030.9" font-family="Helvetica,sans-Serif" font-size="12.00">Weights</text>
<text text-anchor="start" x="8" y="-1017.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** device_outputBuffer</text>
<text text-anchor="start" x="8" y="-1004.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char ** outputBuffer</text>
<text text-anchor="start" x="8" y="-991.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; char * flatEdgeMatrix</text>
<text text-anchor="start" x="8" y="-978.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int * flatValueMatrix</text>
<text text-anchor="start" x="8" y="-965.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaBlocks</text>
<text text-anchor="start" x="8" y="-952.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaThreads</text>
<text text-anchor="start" x="8" y="-939.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int iterationsPerKernelThread</text>
<text text-anchor="start" x="8" y="-926.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerSync</text>
<text text-anchor="start" x="8" y="-913.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int totalOutputPerKernel</text>
<text text-anchor="start" x="8" y="-900.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int numberOfPartitions</text>
<text text-anchor="start" x="8" y="-887.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaGridSize</text>
<text text-anchor="start" x="8" y="-874.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int cudaMemPerGrid</text>
<text text-anchor="start" x="8" y="-861.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; long int cudaPerKernelAllocationSize</text>
<text text-anchor="start" x="8" y="-848.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; int alternatingKernels</text>
<text text-anchor="start" x="8" y="-835.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; unsigned long ** device</text>
<text text-anchor="start" x="8" y="-822.9" font-family="Helvetica,sans-Serif" font-size="12.00">_seeds</text>
<text text-anchor="start" x="8" y="-809.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; cudaStream_t * cudastreams</text>
<polyline fill="none" stroke="black" points="0,-802.5 254,-802.5 "/>
<text text-anchor="start" x="8" y="-788.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void MigrateMatrix()</text>
<text text-anchor="start" x="8" y="-775.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FlattenMatrix()</text>
<text text-anchor="start" x="8" y="-762.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ __host__ void FastRandom</text>
<text text-anchor="start" x="8" y="-749.9" font-family="Helvetica,sans-Serif" font-size="12.00">Walk(unsigned long int</text>
<text text-anchor="start" x="8" y="-736.9" font-family="Helvetica,sans-Serif" font-size="12.00"> n, const char *wordlistFileName,</text>
<text text-anchor="start" x="8" y="-723.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int minLen, int maxLen, bool</text>
<text text-anchor="start" x="8" y="-710.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bFileIO, bool bInfinite)</text>
<text text-anchor="start" x="8" y="-697.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ char * AllocVRAMOutput</text>
<text text-anchor="start" x="8" y="-684.9" font-family="Helvetica,sans-Serif" font-size="12.00">Buffer(long int n, long int</text>
<text text-anchor="start" x="8" y="-671.9" font-family="Helvetica,sans-Serif" font-size="12.00"> singleGenMaxLen, long int CUDAKernel</text>
<text text-anchor="start" x="8" y="-658.9" font-family="Helvetica,sans-Serif" font-size="12.00">GridSize, long int sizePerGrid)</text>
<text text-anchor="start" x="8" y="-645.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void LaunchAsync</text>
<text text-anchor="start" x="8" y="-632.9" font-family="Helvetica,sans-Serif" font-size="12.00">Kernel(int kernelID, int</text>
<text text-anchor="start" x="8" y="-619.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
<text text-anchor="start" x="8" y="-606.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void prepKernel</text>
<text text-anchor="start" x="8" y="-593.9" font-family="Helvetica,sans-Serif" font-size="12.00">MemoryChannel(int numberOfStreams)</text>
<text text-anchor="start" x="8" y="-580.9" font-family="Helvetica,sans-Serif" font-size="12.00"># __host__ void GatherAsync</text>
<text text-anchor="start" x="8" y="-567.9" font-family="Helvetica,sans-Serif" font-size="12.00">KernelOutput(int kernelID,</text>
<text text-anchor="start" x="8" y="-554.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bFileIO, std::ofstream</text>
<text text-anchor="start" x="8" y="-541.9" font-family="Helvetica,sans-Serif" font-size="12.00"> &amp;wordlist)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node9 -->
<g id="edge10" class="edge">
<title>Node6&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M253.34,-1157.93C249.83,-1148.93 246.31,-1139.88 242.78,-1130.83"/>
<polygon fill="none" stroke="midnightblue" points="250.09,-1159.25 256.98,-1167.3 256.62,-1156.71 250.09,-1159.25"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="class_markov_1_1_a_p_i_1_1_markov_passwords.html" target="_top" xlink:title="Markov::Model with char represented nodes.">
<polygon fill="none" stroke="black" points="207.5,-1709.5 207.5,-2149.5 502.5,-2149.5 502.5,-1709.5 207.5,-1709.5"/>
<text text-anchor="middle" x="355" y="-2135.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::MarkovPasswords</text>
<polyline fill="none" stroke="black" points="207.5,-2128.5 502.5,-2128.5 "/>
<text text-anchor="start" x="215.5" y="-2114.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ifstream * datasetFile</text>
<text text-anchor="start" x="215.5" y="-2101.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * modelSavefile</text>
<text text-anchor="start" x="215.5" y="-2088.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::ofstream * outputFile</text>
<polyline fill="none" stroke="black" points="207.5,-2081.5 502.5,-2081.5 "/>
<text text-anchor="start" x="215.5" y="-2067.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords()</text>
<text text-anchor="start" x="215.5" y="-2054.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ MarkovPasswords(const</text>
<text text-anchor="start" x="215.5" y="-2041.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *filename)</text>
<text text-anchor="start" x="215.5" y="-2028.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ifstream * OpenDataset</text>
<text text-anchor="start" x="215.5" y="-2015.9" font-family="Helvetica,sans-Serif" font-size="12.00">File(const char *filename)</text>
<text text-anchor="start" x="215.5" y="-2002.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Train(const char</text>
<text text-anchor="start" x="215.5" y="-1989.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *datasetFileName, char</text>
<text text-anchor="start" x="215.5" y="-1976.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter, int threads)</text>
<text text-anchor="start" x="215.5" y="-1963.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::ofstream * Save</text>
<text text-anchor="start" x="215.5" y="-1950.9" font-family="Helvetica,sans-Serif" font-size="12.00">(const char *filename)</text>
<text text-anchor="start" x="215.5" y="-1937.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Generate(unsigned</text>
<text text-anchor="start" x="215.5" y="-1924.9" font-family="Helvetica,sans-Serif" font-size="12.00"> long int n, const char</text>
<text text-anchor="start" x="215.5" y="-1911.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *wordlistFileName, int</text>
<text text-anchor="start" x="215.5" y="-1898.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen=6, int maxLen=12,</text>
<text text-anchor="start" x="215.5" y="-1885.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int threads=20)</text>
<text text-anchor="start" x="215.5" y="-1872.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void Buff(const char</text>
<text text-anchor="start" x="215.5" y="-1859.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *str, double multiplier,</text>
<text text-anchor="start" x="215.5" y="-1846.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bool bDontAdjustSelfLoops</text>
<text text-anchor="start" x="215.5" y="-1833.9" font-family="Helvetica,sans-Serif" font-size="12.00">=true, bool bDontAdjustExtendedLoops=false)</text>
<text text-anchor="start" x="215.5" y="-1820.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void TrainThread(Markov</text>
<text text-anchor="start" x="215.5" y="-1807.9" font-family="Helvetica,sans-Serif" font-size="12.00">::API::Concurrency::ThreadShared</text>
<text text-anchor="start" x="215.5" y="-1794.9" font-family="Helvetica,sans-Serif" font-size="12.00">ListHandler *listhandler, char</text>
<text text-anchor="start" x="215.5" y="-1781.9" font-family="Helvetica,sans-Serif" font-size="12.00"> delimiter)</text>
<text text-anchor="start" x="215.5" y="-1768.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; void GenerateThread</text>
<text text-anchor="start" x="215.5" y="-1755.9" font-family="Helvetica,sans-Serif" font-size="12.00">(std::mutex *outputLock,</text>
<text text-anchor="start" x="215.5" y="-1742.9" font-family="Helvetica,sans-Serif" font-size="12.00"> unsigned long int n, std</text>
<text text-anchor="start" x="215.5" y="-1729.9" font-family="Helvetica,sans-Serif" font-size="12.00">::ofstream *wordlist, int</text>
<text text-anchor="start" x="215.5" y="-1716.9" font-family="Helvetica,sans-Serif" font-size="12.00"> minLen, int maxLen)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M355,-1699.02C355,-1690.32 355,-1681.57 355,-1672.83"/>
<polygon fill="none" stroke="midnightblue" points="351.5,-1699.22 355,-1709.22 358.5,-1699.22 351.5,-1699.22"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="class_markov_1_1_model.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="249,-2186.5 249,-2548.5 461,-2548.5 461,-2186.5 249,-2186.5"/>
<text text-anchor="middle" x="355" y="-2534.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::Model&lt; char &gt;</text>
<polyline fill="none" stroke="black" points="249,-2527.5 461,-2527.5 "/>
<text text-anchor="start" x="257" y="-2513.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::map&lt; char, Node</text>
<text text-anchor="start" x="257" y="-2500.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; nodes</text>
<text text-anchor="start" x="257" y="-2487.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; Node&lt; char &gt; * starterNode</text>
<text text-anchor="start" x="257" y="-2474.9" font-family="Helvetica,sans-Serif" font-size="12.00">&#45; std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="257" y="-2461.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; edges</text>
<polyline fill="none" stroke="black" points="249,-2454.5 461,-2454.5 "/>
<text text-anchor="start" x="257" y="-2440.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Model()</text>
<text text-anchor="start" x="257" y="-2427.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ char * RandomWalk(Markov</text>
<text text-anchor="start" x="257" y="-2414.9" font-family="Helvetica,sans-Serif" font-size="12.00">::Random::RandomEngine</text>
<text text-anchor="start" x="257" y="-2401.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *randomEngine, int minSetting,</text>
<text text-anchor="start" x="257" y="-2388.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int maxSetting, char *buffer)</text>
<text text-anchor="start" x="257" y="-2375.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void AdjustEdge(const</text>
<text text-anchor="start" x="257" y="-2362.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char *payload, long</text>
<text text-anchor="start" x="257" y="-2349.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int occurrence)</text>
<text text-anchor="start" x="257" y="-2336.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(std::ifstream *)</text>
<text text-anchor="start" x="257" y="-2323.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Import(const char</text>
<text text-anchor="start" x="257" y="-2310.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="257" y="-2297.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(std::ofstream *)</text>
<text text-anchor="start" x="257" y="-2284.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ bool Export(const char</text>
<text text-anchor="start" x="257" y="-2271.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *filename)</text>
<text text-anchor="start" x="257" y="-2258.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ Node&lt; char &gt; * StarterNode()</text>
<text text-anchor="start" x="257" y="-2245.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::vector&lt; Edge&lt;</text>
<text text-anchor="start" x="257" y="-2232.9" font-family="Helvetica,sans-Serif" font-size="12.00"> char &gt; * &gt; * Edges()</text>
<text text-anchor="start" x="257" y="-2219.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ std::map&lt; char, Node</text>
<text text-anchor="start" x="257" y="-2206.9" font-family="Helvetica,sans-Serif" font-size="12.00">&lt; char &gt; * &gt; * Nodes()</text>
<text text-anchor="start" x="257" y="-2193.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ void OptimizeEdgeOrder()</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M355,-2176.11C355,-2167.38 355,-2158.58 355,-2149.79"/>
<polygon fill="none" stroke="midnightblue" points="351.5,-2176.33 355,-2186.33 358.5,-2176.33 351.5,-2176.33"/>
</g>
<!-- Node9&#45;&gt;Node1 -->
<g id="edge9" class="edge">
<title>Node9&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M196.67,-524.84C217.71,-462.22 244.42,-398.55 278,-343 285.66,-330.33 295.06,-318.03 305.12,-306.52"/>
<polygon fill="none" stroke="midnightblue" points="193.3,-523.88 193.48,-534.47 199.95,-526.08 193.3,-523.88"/>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="class_markov_1_1_a_p_i_1_1_c_u_d_a_1_1_c_u_d_a_device_controller.html" target="_top" xlink:title="Controller class for CUDA device.">
<polygon fill="none" stroke="black" points="32,-1271.5 32,-1568.5 210,-1568.5 210,-1271.5 32,-1271.5"/>
<text text-anchor="start" x="40" y="-1554.9" font-family="Helvetica,sans-Serif" font-size="12.00">Markov::API::CUDA::</text>
<text text-anchor="middle" x="121" y="-1541.9" font-family="Helvetica,sans-Serif" font-size="12.00">CUDADeviceController</text>
<polyline fill="none" stroke="black" points="32,-1534.5 210,-1534.5 "/>
<text text-anchor="middle" x="121" y="-1520.9" font-family="Helvetica,sans-Serif" font-size="12.00"> </text>
<polyline fill="none" stroke="black" points="32,-1513.5 210,-1513.5 "/>
<text text-anchor="start" x="40" y="-1499.9" font-family="Helvetica,sans-Serif" font-size="12.00">+ static __host__ void</text>
<text text-anchor="start" x="40" y="-1486.9" font-family="Helvetica,sans-Serif" font-size="12.00"> ListCudaDevices()</text>
<text text-anchor="start" x="40" y="-1473.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ int</text>
<text text-anchor="start" x="40" y="-1460.9" font-family="Helvetica,sans-Serif" font-size="12.00"> CudaCheckNotifyErr</text>
<text text-anchor="start" x="40" y="-1447.9" font-family="Helvetica,sans-Serif" font-size="12.00">(cudaError_t _status,</text>
<text text-anchor="start" x="40" y="-1434.9" font-family="Helvetica,sans-Serif" font-size="12.00"> const char *msg, bool</text>
<text text-anchor="start" x="40" y="-1421.9" font-family="Helvetica,sans-Serif" font-size="12.00"> bExit=true)</text>
<text text-anchor="start" x="40" y="-1408.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1395.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMalloc2DToFlat(T</text>
<text text-anchor="start" x="40" y="-1382.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, int row, int col)</text>
<text text-anchor="start" x="40" y="-1369.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1356.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMemcpy2DToFlat(T</text>
<text text-anchor="start" x="40" y="-1343.9" font-family="Helvetica,sans-Serif" font-size="12.00"> *dst, T **src, int row,</text>
<text text-anchor="start" x="40" y="-1330.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
<text text-anchor="start" x="40" y="-1317.9" font-family="Helvetica,sans-Serif" font-size="12.00"># static __host__ cudaError</text>
<text text-anchor="start" x="40" y="-1304.9" font-family="Helvetica,sans-Serif" font-size="12.00">_t CudaMigrate2DFlat(T</text>
<text text-anchor="start" x="40" y="-1291.9" font-family="Helvetica,sans-Serif" font-size="12.00"> **dst, T **src, int row,</text>
<text text-anchor="start" x="40" y="-1278.9" font-family="Helvetica,sans-Serif" font-size="12.00"> int col)</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge11" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M122.62,-1261.05C123.03,-1220.53 123.49,-1175.61 123.96,-1130.54"/>
<polygon fill="none" stroke="midnightblue" points="119.12,-1261.22 122.51,-1271.25 126.12,-1261.29 119.12,-1261.22"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_python_1_1_cuda_markopy_1_1_cuda_model_matrix_c_l_i__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
